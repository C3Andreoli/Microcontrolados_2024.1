ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	hadc1
  20              		.section	.bss.hadc1,"aw",%nobits
  21              		.align	2
  24              	hadc1:
  25 0000 00000000 		.space	72
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	htim3
  27              		.section	.bss.htim3,"aw",%nobits
  28              		.align	2
  31              	htim3:
  32 0000 00000000 		.space	72
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	gUSBRxBuffer
  34              		.section	.bss.gUSBRxBuffer,"aw",%nobits
  35              		.align	2
  38              	gUSBRxBuffer:
  39 0000 00000000 		.space	255
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	writeBuffer
  41              		.section	.bss.writeBuffer,"aw",%nobits
  42              		.align	2
  45              	writeBuffer:
  46 0000 00000000 		.space	255
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	readBuffer
  48              		.section	.bss.readBuffer,"aw",%nobits
  49              		.align	2
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 2


  52              	readBuffer:
  53 0000 00000000 		.space	255
  53      00000000 
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.global	read
  55              		.section	.bss.read,"aw",%nobits
  56              		.align	2
  59              	read:
  60 0000 00000000 		.space	8
  60      00000000 
  61              		.global	bitNumber
  62              		.section	.bss.bitNumber,"aw",%nobits
  63              		.align	2
  66              	bitNumber:
  67 0000 00000000 		.space	8
  67      00000000 
  68              		.global	cent
  69              		.section	.bss.cent,"aw",%nobits
  70              		.align	2
  73              	cent:
  74 0000 00000000 		.space	8
  74      00000000 
  75              		.global	test
  76              		.section	.bss.test,"aw",%nobits
  77              		.align	2
  80              	test:
  81 0000 00000000 		.space	8
  81      00000000 
  82              		.section	.text.main,"ax",%progbits
  83              		.align	1
  84              		.global	main
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  89              	main:
  90              	.LFB220:
  91              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 3


  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "button.h"
  26:Core/Src/main.c **** #include "usbd_cdc_if.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** uint8_t gUSBRxBuffer[255];
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_ADC1_Init(void);
  56:Core/Src/main.c **** static void MX_TIM3_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** uint8_t writeBuffer[255];
  64:Core/Src/main.c **** uint8_t readBuffer[255];
  65:Core/Src/main.c **** uint32_t read[2];
  66:Core/Src/main.c **** uint32_t bitNumber[2];
  67:Core/Src/main.c **** uint32_t cent[2];
  68:Core/Src/main.c **** uint32_t test[2];
  69:Core/Src/main.c **** /* USER CODE END 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** /**
  72:Core/Src/main.c ****   * @brief  The application entry point.
  73:Core/Src/main.c ****   * @retval int
  74:Core/Src/main.c ****   */
  75:Core/Src/main.c **** int main(void)
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 4


  76:Core/Src/main.c **** {
  92              		.loc 1 76 1
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              	.LCFI0:
  98              		.cfi_def_cfa_offset 8
  99              		.cfi_offset 7, -8
 100              		.cfi_offset 14, -4
 101 0002 82B0     		sub	sp, sp, #8
 102              	.LCFI1:
 103              		.cfi_def_cfa_offset 16
 104 0004 00AF     		add	r7, sp, #0
 105              	.LCFI2:
 106              		.cfi_def_cfa_register 7
  77:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  78:Core/Src/main.c ****   bitNumber[0] = 4095;
 107              		.loc 1 78 16
 108 0006 214B     		ldr	r3, .L3
 109 0008 40F6FF72 		movw	r2, #4095
 110 000c 1A60     		str	r2, [r3]
  79:Core/Src/main.c ****   cent[0] = 100;
 111              		.loc 1 79 11
 112 000e 204B     		ldr	r3, .L3+4
 113 0010 6422     		movs	r2, #100
 114 0012 1A60     		str	r2, [r3]
  80:Core/Src/main.c ****   /* USER CODE END 1 */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  85:Core/Src/main.c ****   HAL_Init();
 115              		.loc 1 85 3
 116 0014 FFF7FEFF 		bl	HAL_Init
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END Init */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Configure the system clock */
  92:Core/Src/main.c ****   SystemClock_Config();
 117              		.loc 1 92 3
 118 0018 FFF7FEFF 		bl	SystemClock_Config
  93:Core/Src/main.c **** 
  94:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   /* USER CODE END SysInit */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c ****   /* Initialize all configured peripherals */
  99:Core/Src/main.c ****   MX_GPIO_Init();
 119              		.loc 1 99 3
 120 001c FFF7FEFF 		bl	MX_GPIO_Init
 100:Core/Src/main.c ****   MX_ADC1_Init();
 121              		.loc 1 100 3
 122 0020 FFF7FEFF 		bl	MX_ADC1_Init
 101:Core/Src/main.c ****   MX_TIM3_Init();
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 5


 123              		.loc 1 101 3
 124 0024 FFF7FEFF 		bl	MX_TIM3_Init
 102:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 125              		.loc 1 102 3
 126 0028 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 103:Core/Src/main.c ****   
 104:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 105:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 127              		.loc 1 105 3
 128 002c 0021     		movs	r1, #0
 129 002e 1948     		ldr	r0, .L3+8
 130 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 131              	.L2:
 132              	.LBB4:
 106:Core/Src/main.c ****   /* USER CODE END 2 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Infinite loop */
 109:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 110:Core/Src/main.c ****   while (1)
 111:Core/Src/main.c ****   {
 112:Core/Src/main.c ****     /* USER CODE END WHILE */
 113:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 133              		.loc 1 113 5 discriminator 1
 134 0034 1848     		ldr	r0, .L3+12
 135 0036 FFF7FEFF 		bl	HAL_ADC_Start
 114:Core/Src/main.c ****     read[0] = HAL_ADC_GetValue(&hadc1);
 136              		.loc 1 114 15 discriminator 1
 137 003a 1748     		ldr	r0, .L3+12
 138 003c FFF7FEFF 		bl	HAL_ADC_GetValue
 139 0040 0346     		mov	r3, r0
 140              		.loc 1 114 13 discriminator 1
 141 0042 164A     		ldr	r2, .L3+16
 142 0044 1360     		str	r3, [r2]
 115:Core/Src/main.c ****     test[0] = (read[0] * cent[0]) / bitNumber[0];
 143              		.loc 1 115 20 discriminator 1
 144 0046 154B     		ldr	r3, .L3+16
 145 0048 1B68     		ldr	r3, [r3]
 146              		.loc 1 115 30 discriminator 1
 147 004a 114A     		ldr	r2, .L3+4
 148 004c 1268     		ldr	r2, [r2]
 149              		.loc 1 115 24 discriminator 1
 150 004e 03FB02F2 		mul	r2, r3, r2
 151              		.loc 1 115 46 discriminator 1
 152 0052 0E4B     		ldr	r3, .L3
 153 0054 1B68     		ldr	r3, [r3]
 154              		.loc 1 115 35 discriminator 1
 155 0056 B2FBF3F3 		udiv	r3, r2, r3
 156              		.loc 1 115 13 discriminator 1
 157 005a 114A     		ldr	r2, .L3+20
 158 005c 1360     		str	r3, [r2]
 116:Core/Src/main.c ****     uint32_t integerPart = test[0];
 159              		.loc 1 116 14 discriminator 1
 160 005e 104B     		ldr	r3, .L3+20
 161 0060 1B68     		ldr	r3, [r3]
 162 0062 7B60     		str	r3, [r7, #4]
 117:Core/Src/main.c ****     uint32_t decimalPart = (((read[0] * 100 * cent[0]) / bitNumber[0]) - integerPart * 100);
 163              		.loc 1 117 35 discriminator 1
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 6


 164 0064 0D4B     		ldr	r3, .L3+16
 165 0066 1B68     		ldr	r3, [r3]
 166              		.loc 1 117 51 discriminator 1
 167 0068 094A     		ldr	r2, .L3+4
 168 006a 1268     		ldr	r2, [r2]
 169              		.loc 1 117 45 discriminator 1
 170 006c 02FB03F3 		mul	r3, r2, r3
 171 0070 6422     		movs	r2, #100
 172 0072 03FB02F2 		mul	r2, r3, r2
 173              		.loc 1 117 67 discriminator 1
 174 0076 054B     		ldr	r3, .L3
 175 0078 1B68     		ldr	r3, [r3]
 176              		.loc 1 117 56 discriminator 1
 177 007a B2FBF3F2 		udiv	r2, r2, r3
 178              		.loc 1 117 86 discriminator 1
 179 007e 7B68     		ldr	r3, [r7, #4]
 180 0080 6421     		movs	r1, #100
 181 0082 01FB03F3 		mul	r3, r1, r3
 182              		.loc 1 117 14 discriminator 1
 183 0086 D31A     		subs	r3, r2, r3
 184 0088 3B60     		str	r3, [r7]
 185              	.LBE4:
 111:Core/Src/main.c ****     /* USER CODE END WHILE */
 186              		.loc 1 111 3 discriminator 1
 187 008a D3E7     		b	.L2
 188              	.L4:
 189              		.align	2
 190              	.L3:
 191 008c 00000000 		.word	bitNumber
 192 0090 00000000 		.word	cent
 193 0094 00000000 		.word	htim3
 194 0098 00000000 		.word	hadc1
 195 009c 00000000 		.word	read
 196 00a0 00000000 		.word	test
 197              		.cfi_endproc
 198              	.LFE220:
 200              		.section	.text.SystemClock_Config,"ax",%progbits
 201              		.align	1
 202              		.global	SystemClock_Config
 203              		.syntax unified
 204              		.thumb
 205              		.thumb_func
 207              	SystemClock_Config:
 208              	.LFB221:
 118:Core/Src/main.c ****     // sprintf(writeBuffer, "Valor lido %d.%02d %% \r \n",integerPart, decimalPart);
 119:Core/Src/main.c ****     // CDC_Transmit_FS(writeBuffer,strlen(writeBuffer));
 120:Core/Src/main.c ****     // HAL_Delay(100);
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     // sprintf()
 123:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 124:Core/Src/main.c ****   }
 125:Core/Src/main.c ****   /* USER CODE END 3 */
 126:Core/Src/main.c **** }
 127:Core/Src/main.c **** 
 128:Core/Src/main.c **** /**
 129:Core/Src/main.c ****   * @brief System Clock Configuration
 130:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 7


 131:Core/Src/main.c ****   */
 132:Core/Src/main.c **** void SystemClock_Config(void)
 133:Core/Src/main.c **** {
 209              		.loc 1 133 1
 210              		.cfi_startproc
 211              		@ args = 0, pretend = 0, frame = 80
 212              		@ frame_needed = 1, uses_anonymous_args = 0
 213 0000 80B5     		push	{r7, lr}
 214              	.LCFI3:
 215              		.cfi_def_cfa_offset 8
 216              		.cfi_offset 7, -8
 217              		.cfi_offset 14, -4
 218 0002 94B0     		sub	sp, sp, #80
 219              	.LCFI4:
 220              		.cfi_def_cfa_offset 88
 221 0004 00AF     		add	r7, sp, #0
 222              	.LCFI5:
 223              		.cfi_def_cfa_register 7
 134:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 224              		.loc 1 134 22
 225 0006 07F12003 		add	r3, r7, #32
 226 000a 3022     		movs	r2, #48
 227 000c 0021     		movs	r1, #0
 228 000e 1846     		mov	r0, r3
 229 0010 FFF7FEFF 		bl	memset
 135:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 230              		.loc 1 135 22
 231 0014 07F10C03 		add	r3, r7, #12
 232 0018 0022     		movs	r2, #0
 233 001a 1A60     		str	r2, [r3]
 234 001c 5A60     		str	r2, [r3, #4]
 235 001e 9A60     		str	r2, [r3, #8]
 236 0020 DA60     		str	r2, [r3, #12]
 237 0022 1A61     		str	r2, [r3, #16]
 238              	.LBB5:
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 138:Core/Src/main.c ****   */
 139:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 239              		.loc 1 139 3
 240 0024 0023     		movs	r3, #0
 241 0026 BB60     		str	r3, [r7, #8]
 242 0028 274B     		ldr	r3, .L9
 243 002a 1B6C     		ldr	r3, [r3, #64]
 244 002c 264A     		ldr	r2, .L9
 245 002e 43F08053 		orr	r3, r3, #268435456
 246 0032 1364     		str	r3, [r2, #64]
 247 0034 244B     		ldr	r3, .L9
 248 0036 1B6C     		ldr	r3, [r3, #64]
 249 0038 03F08053 		and	r3, r3, #268435456
 250 003c BB60     		str	r3, [r7, #8]
 251 003e BB68     		ldr	r3, [r7, #8]
 252              	.LBE5:
 253              	.LBB6:
 140:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 254              		.loc 1 140 3
 255 0040 0023     		movs	r3, #0
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 8


 256 0042 7B60     		str	r3, [r7, #4]
 257 0044 214B     		ldr	r3, .L9+4
 258 0046 1B68     		ldr	r3, [r3]
 259 0048 204A     		ldr	r2, .L9+4
 260 004a 43F44043 		orr	r3, r3, #49152
 261 004e 1360     		str	r3, [r2]
 262 0050 1E4B     		ldr	r3, .L9+4
 263 0052 1B68     		ldr	r3, [r3]
 264 0054 03F44043 		and	r3, r3, #49152
 265 0058 7B60     		str	r3, [r7, #4]
 266 005a 7B68     		ldr	r3, [r7, #4]
 267              	.LBE6:
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 143:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 144:Core/Src/main.c ****   */
 145:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 268              		.loc 1 145 36
 269 005c 0123     		movs	r3, #1
 270 005e 3B62     		str	r3, [r7, #32]
 146:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 271              		.loc 1 146 30
 272 0060 4FF48033 		mov	r3, #65536
 273 0064 7B62     		str	r3, [r7, #36]
 147:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 274              		.loc 1 147 34
 275 0066 0223     		movs	r3, #2
 276 0068 BB63     		str	r3, [r7, #56]
 148:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 277              		.loc 1 148 35
 278 006a 4FF48003 		mov	r3, #4194304
 279 006e FB63     		str	r3, [r7, #60]
 149:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 280              		.loc 1 149 30
 281 0070 1923     		movs	r3, #25
 282 0072 3B64     		str	r3, [r7, #64]
 150:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 283              		.loc 1 150 30
 284 0074 C023     		movs	r3, #192
 285 0076 7B64     		str	r3, [r7, #68]
 151:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 286              		.loc 1 151 30
 287 0078 0223     		movs	r3, #2
 288 007a BB64     		str	r3, [r7, #72]
 152:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 289              		.loc 1 152 30
 290 007c 0423     		movs	r3, #4
 291 007e FB64     		str	r3, [r7, #76]
 153:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 292              		.loc 1 153 7
 293 0080 07F12003 		add	r3, r7, #32
 294 0084 1846     		mov	r0, r3
 295 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 296 008a 0346     		mov	r3, r0
 297              		.loc 1 153 6
 298 008c 002B     		cmp	r3, #0
 299 008e 01D0     		beq	.L6
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 9


 154:Core/Src/main.c ****   {
 155:Core/Src/main.c ****     Error_Handler();
 300              		.loc 1 155 5
 301 0090 FFF7FEFF 		bl	Error_Handler
 302              	.L6:
 156:Core/Src/main.c ****   }
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 159:Core/Src/main.c ****   */
 160:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 303              		.loc 1 160 31
 304 0094 0F23     		movs	r3, #15
 305 0096 FB60     		str	r3, [r7, #12]
 161:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 162:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 306              		.loc 1 162 34
 307 0098 0223     		movs	r3, #2
 308 009a 3B61     		str	r3, [r7, #16]
 163:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 309              		.loc 1 163 35
 310 009c 0023     		movs	r3, #0
 311 009e 7B61     		str	r3, [r7, #20]
 164:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 312              		.loc 1 164 36
 313 00a0 4FF48053 		mov	r3, #4096
 314 00a4 BB61     		str	r3, [r7, #24]
 165:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 315              		.loc 1 165 36
 316 00a6 0023     		movs	r3, #0
 317 00a8 FB61     		str	r3, [r7, #28]
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 318              		.loc 1 167 7
 319 00aa 07F10C03 		add	r3, r7, #12
 320 00ae 0321     		movs	r1, #3
 321 00b0 1846     		mov	r0, r3
 322 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 323 00b6 0346     		mov	r3, r0
 324              		.loc 1 167 6
 325 00b8 002B     		cmp	r3, #0
 326 00ba 01D0     		beq	.L8
 168:Core/Src/main.c ****   {
 169:Core/Src/main.c ****     Error_Handler();
 327              		.loc 1 169 5
 328 00bc FFF7FEFF 		bl	Error_Handler
 329              	.L8:
 170:Core/Src/main.c ****   }
 171:Core/Src/main.c **** }
 330              		.loc 1 171 1
 331 00c0 00BF     		nop
 332 00c2 5037     		adds	r7, r7, #80
 333              	.LCFI6:
 334              		.cfi_def_cfa_offset 8
 335 00c4 BD46     		mov	sp, r7
 336              	.LCFI7:
 337              		.cfi_def_cfa_register 13
 338              		@ sp needed
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 10


 339 00c6 80BD     		pop	{r7, pc}
 340              	.L10:
 341              		.align	2
 342              	.L9:
 343 00c8 00380240 		.word	1073887232
 344 00cc 00700040 		.word	1073770496
 345              		.cfi_endproc
 346              	.LFE221:
 348              		.section	.text.MX_ADC1_Init,"ax",%progbits
 349              		.align	1
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 354              	MX_ADC1_Init:
 355              	.LFB222:
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /**
 174:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 175:Core/Src/main.c ****   * @param None
 176:Core/Src/main.c ****   * @retval None
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c **** static void MX_ADC1_Init(void)
 179:Core/Src/main.c **** {
 356              		.loc 1 179 1
 357              		.cfi_startproc
 358              		@ args = 0, pretend = 0, frame = 16
 359              		@ frame_needed = 1, uses_anonymous_args = 0
 360 0000 80B5     		push	{r7, lr}
 361              	.LCFI8:
 362              		.cfi_def_cfa_offset 8
 363              		.cfi_offset 7, -8
 364              		.cfi_offset 14, -4
 365 0002 84B0     		sub	sp, sp, #16
 366              	.LCFI9:
 367              		.cfi_def_cfa_offset 24
 368 0004 00AF     		add	r7, sp, #0
 369              	.LCFI10:
 370              		.cfi_def_cfa_register 7
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 182:Core/Src/main.c **** 
 183:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 184:Core/Src/main.c **** 
 185:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 371              		.loc 1 185 26
 372 0006 3B46     		mov	r3, r7
 373 0008 0022     		movs	r2, #0
 374 000a 1A60     		str	r2, [r3]
 375 000c 5A60     		str	r2, [r3, #4]
 376 000e 9A60     		str	r2, [r3, #8]
 377 0010 DA60     		str	r2, [r3, #12]
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 190:Core/Src/main.c **** 
 191:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 11


 192:Core/Src/main.c ****   */
 193:Core/Src/main.c ****   hadc1.Instance = ADC1;
 378              		.loc 1 193 18
 379 0012 214B     		ldr	r3, .L15
 380 0014 214A     		ldr	r2, .L15+4
 381 0016 1A60     		str	r2, [r3]
 194:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 382              		.loc 1 194 29
 383 0018 1F4B     		ldr	r3, .L15
 384 001a 4FF48032 		mov	r2, #65536
 385 001e 5A60     		str	r2, [r3, #4]
 195:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 386              		.loc 1 195 25
 387 0020 1D4B     		ldr	r3, .L15
 388 0022 0022     		movs	r2, #0
 389 0024 9A60     		str	r2, [r3, #8]
 196:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 390              		.loc 1 196 27
 391 0026 1C4B     		ldr	r3, .L15
 392 0028 0022     		movs	r2, #0
 393 002a 1A61     		str	r2, [r3, #16]
 197:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 394              		.loc 1 197 33
 395 002c 1A4B     		ldr	r3, .L15
 396 002e 0022     		movs	r2, #0
 397 0030 1A76     		strb	r2, [r3, #24]
 198:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 398              		.loc 1 198 36
 399 0032 194B     		ldr	r3, .L15
 400 0034 0022     		movs	r2, #0
 401 0036 83F82020 		strb	r2, [r3, #32]
 199:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 402              		.loc 1 199 35
 403 003a 174B     		ldr	r3, .L15
 404 003c 0022     		movs	r2, #0
 405 003e DA62     		str	r2, [r3, #44]
 200:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 406              		.loc 1 200 31
 407 0040 154B     		ldr	r3, .L15
 408 0042 174A     		ldr	r2, .L15+8
 409 0044 9A62     		str	r2, [r3, #40]
 201:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 410              		.loc 1 201 24
 411 0046 144B     		ldr	r3, .L15
 412 0048 0022     		movs	r2, #0
 413 004a DA60     		str	r2, [r3, #12]
 202:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 414              		.loc 1 202 30
 415 004c 124B     		ldr	r3, .L15
 416 004e 0122     		movs	r2, #1
 417 0050 DA61     		str	r2, [r3, #28]
 203:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 418              		.loc 1 203 36
 419 0052 114B     		ldr	r3, .L15
 420 0054 0022     		movs	r2, #0
 421 0056 83F83020 		strb	r2, [r3, #48]
 204:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 12


 422              		.loc 1 204 27
 423 005a 0F4B     		ldr	r3, .L15
 424 005c 0122     		movs	r2, #1
 425 005e 5A61     		str	r2, [r3, #20]
 205:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 426              		.loc 1 205 7
 427 0060 0D48     		ldr	r0, .L15
 428 0062 FFF7FEFF 		bl	HAL_ADC_Init
 429 0066 0346     		mov	r3, r0
 430              		.loc 1 205 6
 431 0068 002B     		cmp	r3, #0
 432 006a 01D0     		beq	.L12
 206:Core/Src/main.c ****   {
 207:Core/Src/main.c ****     Error_Handler();
 433              		.loc 1 207 5
 434 006c FFF7FEFF 		bl	Error_Handler
 435              	.L12:
 208:Core/Src/main.c ****   }
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 211:Core/Src/main.c ****   */
 212:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 436              		.loc 1 212 19
 437 0070 0023     		movs	r3, #0
 438 0072 3B60     		str	r3, [r7]
 213:Core/Src/main.c ****   sConfig.Rank = 1;
 439              		.loc 1 213 16
 440 0074 0123     		movs	r3, #1
 441 0076 7B60     		str	r3, [r7, #4]
 214:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 442              		.loc 1 214 24
 443 0078 0023     		movs	r3, #0
 444 007a BB60     		str	r3, [r7, #8]
 215:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 445              		.loc 1 215 7
 446 007c 3B46     		mov	r3, r7
 447 007e 1946     		mov	r1, r3
 448 0080 0548     		ldr	r0, .L15
 449 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 450 0086 0346     		mov	r3, r0
 451              		.loc 1 215 6
 452 0088 002B     		cmp	r3, #0
 453 008a 01D0     		beq	.L14
 216:Core/Src/main.c ****   {
 217:Core/Src/main.c ****     Error_Handler();
 454              		.loc 1 217 5
 455 008c FFF7FEFF 		bl	Error_Handler
 456              	.L14:
 218:Core/Src/main.c ****   }
 219:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 222:Core/Src/main.c **** 
 223:Core/Src/main.c **** }
 457              		.loc 1 223 1
 458 0090 00BF     		nop
 459 0092 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 13


 460              	.LCFI11:
 461              		.cfi_def_cfa_offset 8
 462 0094 BD46     		mov	sp, r7
 463              	.LCFI12:
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 0096 80BD     		pop	{r7, pc}
 467              	.L16:
 468              		.align	2
 469              	.L15:
 470 0098 00000000 		.word	hadc1
 471 009c 00200140 		.word	1073815552
 472 00a0 0100000F 		.word	251658241
 473              		.cfi_endproc
 474              	.LFE222:
 476              		.section	.text.MX_TIM3_Init,"ax",%progbits
 477              		.align	1
 478              		.syntax unified
 479              		.thumb
 480              		.thumb_func
 482              	MX_TIM3_Init:
 483              	.LFB223:
 224:Core/Src/main.c **** 
 225:Core/Src/main.c **** /**
 226:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 227:Core/Src/main.c ****   * @param None
 228:Core/Src/main.c ****   * @retval None
 229:Core/Src/main.c ****   */
 230:Core/Src/main.c **** static void MX_TIM3_Init(void)
 231:Core/Src/main.c **** {
 484              		.loc 1 231 1
 485              		.cfi_startproc
 486              		@ args = 0, pretend = 0, frame = 56
 487              		@ frame_needed = 1, uses_anonymous_args = 0
 488 0000 80B5     		push	{r7, lr}
 489              	.LCFI13:
 490              		.cfi_def_cfa_offset 8
 491              		.cfi_offset 7, -8
 492              		.cfi_offset 14, -4
 493 0002 8EB0     		sub	sp, sp, #56
 494              	.LCFI14:
 495              		.cfi_def_cfa_offset 64
 496 0004 00AF     		add	r7, sp, #0
 497              	.LCFI15:
 498              		.cfi_def_cfa_register 7
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 499              		.loc 1 237 26
 500 0006 07F12803 		add	r3, r7, #40
 501 000a 0022     		movs	r2, #0
 502 000c 1A60     		str	r2, [r3]
 503 000e 5A60     		str	r2, [r3, #4]
 504 0010 9A60     		str	r2, [r3, #8]
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 14


 505 0012 DA60     		str	r2, [r3, #12]
 238:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 506              		.loc 1 238 27
 507 0014 07F12003 		add	r3, r7, #32
 508 0018 0022     		movs	r2, #0
 509 001a 1A60     		str	r2, [r3]
 510 001c 5A60     		str	r2, [r3, #4]
 239:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 511              		.loc 1 239 22
 512 001e 3B1D     		adds	r3, r7, #4
 513 0020 0022     		movs	r2, #0
 514 0022 1A60     		str	r2, [r3]
 515 0024 5A60     		str	r2, [r3, #4]
 516 0026 9A60     		str	r2, [r3, #8]
 517 0028 DA60     		str	r2, [r3, #12]
 518 002a 1A61     		str	r2, [r3, #16]
 519 002c 5A61     		str	r2, [r3, #20]
 520 002e 9A61     		str	r2, [r3, #24]
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 244:Core/Src/main.c ****   htim3.Instance = TIM3;
 521              		.loc 1 244 18
 522 0030 2D4B     		ldr	r3, .L23
 523 0032 2E4A     		ldr	r2, .L23+4
 524 0034 1A60     		str	r2, [r3]
 245:Core/Src/main.c ****   htim3.Init.Prescaler = 1;
 525              		.loc 1 245 24
 526 0036 2C4B     		ldr	r3, .L23
 527 0038 0122     		movs	r2, #1
 528 003a 5A60     		str	r2, [r3, #4]
 246:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 529              		.loc 1 246 26
 530 003c 2A4B     		ldr	r3, .L23
 531 003e 0022     		movs	r2, #0
 532 0040 9A60     		str	r2, [r3, #8]
 247:Core/Src/main.c ****   htim3.Init.Period = 12000;
 533              		.loc 1 247 21
 534 0042 294B     		ldr	r3, .L23
 535 0044 42F6E062 		movw	r2, #12000
 536 0048 DA60     		str	r2, [r3, #12]
 248:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 537              		.loc 1 248 28
 538 004a 274B     		ldr	r3, .L23
 539 004c 0022     		movs	r2, #0
 540 004e 1A61     		str	r2, [r3, #16]
 249:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 541              		.loc 1 249 32
 542 0050 254B     		ldr	r3, .L23
 543 0052 0022     		movs	r2, #0
 544 0054 9A61     		str	r2, [r3, #24]
 250:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 545              		.loc 1 250 7
 546 0056 2448     		ldr	r0, .L23
 547 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 548 005c 0346     		mov	r3, r0
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 15


 549              		.loc 1 250 6
 550 005e 002B     		cmp	r3, #0
 551 0060 01D0     		beq	.L18
 251:Core/Src/main.c ****   {
 252:Core/Src/main.c ****     Error_Handler();
 552              		.loc 1 252 5
 553 0062 FFF7FEFF 		bl	Error_Handler
 554              	.L18:
 253:Core/Src/main.c ****   }
 254:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 555              		.loc 1 254 34
 556 0066 4FF48053 		mov	r3, #4096
 557 006a BB62     		str	r3, [r7, #40]
 255:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 558              		.loc 1 255 7
 559 006c 07F12803 		add	r3, r7, #40
 560 0070 1946     		mov	r1, r3
 561 0072 1D48     		ldr	r0, .L23
 562 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 563 0078 0346     		mov	r3, r0
 564              		.loc 1 255 6
 565 007a 002B     		cmp	r3, #0
 566 007c 01D0     		beq	.L19
 256:Core/Src/main.c ****   {
 257:Core/Src/main.c ****     Error_Handler();
 567              		.loc 1 257 5
 568 007e FFF7FEFF 		bl	Error_Handler
 569              	.L19:
 258:Core/Src/main.c ****   }
 259:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 570              		.loc 1 259 7
 571 0082 1948     		ldr	r0, .L23
 572 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 573 0088 0346     		mov	r3, r0
 574              		.loc 1 259 6
 575 008a 002B     		cmp	r3, #0
 576 008c 01D0     		beq	.L20
 260:Core/Src/main.c ****   {
 261:Core/Src/main.c ****     Error_Handler();
 577              		.loc 1 261 5
 578 008e FFF7FEFF 		bl	Error_Handler
 579              	.L20:
 262:Core/Src/main.c ****   }
 263:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 580              		.loc 1 263 37
 581 0092 0023     		movs	r3, #0
 582 0094 3B62     		str	r3, [r7, #32]
 264:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 583              		.loc 1 264 33
 584 0096 0023     		movs	r3, #0
 585 0098 7B62     		str	r3, [r7, #36]
 265:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 586              		.loc 1 265 7
 587 009a 07F12003 		add	r3, r7, #32
 588 009e 1946     		mov	r1, r3
 589 00a0 1148     		ldr	r0, .L23
 590 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 16


 591 00a6 0346     		mov	r3, r0
 592              		.loc 1 265 6
 593 00a8 002B     		cmp	r3, #0
 594 00aa 01D0     		beq	.L21
 266:Core/Src/main.c ****   {
 267:Core/Src/main.c ****     Error_Handler();
 595              		.loc 1 267 5
 596 00ac FFF7FEFF 		bl	Error_Handler
 597              	.L21:
 268:Core/Src/main.c ****   }
 269:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 598              		.loc 1 269 20
 599 00b0 6023     		movs	r3, #96
 600 00b2 7B60     		str	r3, [r7, #4]
 270:Core/Src/main.c ****   sConfigOC.Pulse = 6000;
 601              		.loc 1 270 19
 602 00b4 41F27073 		movw	r3, #6000
 603 00b8 BB60     		str	r3, [r7, #8]
 271:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 604              		.loc 1 271 24
 605 00ba 0023     		movs	r3, #0
 606 00bc FB60     		str	r3, [r7, #12]
 272:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 607              		.loc 1 272 24
 608 00be 0023     		movs	r3, #0
 609 00c0 7B61     		str	r3, [r7, #20]
 273:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 610              		.loc 1 273 7
 611 00c2 3B1D     		adds	r3, r7, #4
 612 00c4 0022     		movs	r2, #0
 613 00c6 1946     		mov	r1, r3
 614 00c8 0748     		ldr	r0, .L23
 615 00ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 616 00ce 0346     		mov	r3, r0
 617              		.loc 1 273 6
 618 00d0 002B     		cmp	r3, #0
 619 00d2 01D0     		beq	.L22
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 620              		.loc 1 275 5
 621 00d4 FFF7FEFF 		bl	Error_Handler
 622              	.L22:
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 280:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 623              		.loc 1 280 3
 624 00d8 0348     		ldr	r0, .L23
 625 00da FFF7FEFF 		bl	HAL_TIM_MspPostInit
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** }
 626              		.loc 1 282 1
 627 00de 00BF     		nop
 628 00e0 3837     		adds	r7, r7, #56
 629              	.LCFI16:
 630              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 17


 631 00e2 BD46     		mov	sp, r7
 632              	.LCFI17:
 633              		.cfi_def_cfa_register 13
 634              		@ sp needed
 635 00e4 80BD     		pop	{r7, pc}
 636              	.L24:
 637 00e6 00BF     		.align	2
 638              	.L23:
 639 00e8 00000000 		.word	htim3
 640 00ec 00040040 		.word	1073742848
 641              		.cfi_endproc
 642              	.LFE223:
 644              		.section	.text.MX_GPIO_Init,"ax",%progbits
 645              		.align	1
 646              		.syntax unified
 647              		.thumb
 648              		.thumb_func
 650              	MX_GPIO_Init:
 651              	.LFB224:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief GPIO Initialization Function
 286:Core/Src/main.c ****   * @param None
 287:Core/Src/main.c ****   * @retval None
 288:Core/Src/main.c ****   */
 289:Core/Src/main.c **** static void MX_GPIO_Init(void)
 290:Core/Src/main.c **** {
 652              		.loc 1 290 1
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 40
 655              		@ frame_needed = 1, uses_anonymous_args = 0
 656 0000 80B5     		push	{r7, lr}
 657              	.LCFI18:
 658              		.cfi_def_cfa_offset 8
 659              		.cfi_offset 7, -8
 660              		.cfi_offset 14, -4
 661 0002 8AB0     		sub	sp, sp, #40
 662              	.LCFI19:
 663              		.cfi_def_cfa_offset 48
 664 0004 00AF     		add	r7, sp, #0
 665              	.LCFI20:
 666              		.cfi_def_cfa_register 7
 291:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 667              		.loc 1 291 20
 668 0006 07F11403 		add	r3, r7, #20
 669 000a 0022     		movs	r2, #0
 670 000c 1A60     		str	r2, [r3]
 671 000e 5A60     		str	r2, [r3, #4]
 672 0010 9A60     		str	r2, [r3, #8]
 673 0012 DA60     		str	r2, [r3, #12]
 674 0014 1A61     		str	r2, [r3, #16]
 675              	.LBB7:
 292:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 293:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 296:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 18


 676              		.loc 1 296 3
 677 0016 0023     		movs	r3, #0
 678 0018 3B61     		str	r3, [r7, #16]
 679 001a 274B     		ldr	r3, .L26
 680 001c 1B6B     		ldr	r3, [r3, #48]
 681 001e 264A     		ldr	r2, .L26
 682 0020 43F00403 		orr	r3, r3, #4
 683 0024 1363     		str	r3, [r2, #48]
 684 0026 244B     		ldr	r3, .L26
 685 0028 1B6B     		ldr	r3, [r3, #48]
 686 002a 03F00403 		and	r3, r3, #4
 687 002e 3B61     		str	r3, [r7, #16]
 688 0030 3B69     		ldr	r3, [r7, #16]
 689              	.LBE7:
 690              	.LBB8:
 297:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 691              		.loc 1 297 3
 692 0032 0023     		movs	r3, #0
 693 0034 FB60     		str	r3, [r7, #12]
 694 0036 204B     		ldr	r3, .L26
 695 0038 1B6B     		ldr	r3, [r3, #48]
 696 003a 1F4A     		ldr	r2, .L26
 697 003c 43F08003 		orr	r3, r3, #128
 698 0040 1363     		str	r3, [r2, #48]
 699 0042 1D4B     		ldr	r3, .L26
 700 0044 1B6B     		ldr	r3, [r3, #48]
 701 0046 03F08003 		and	r3, r3, #128
 702 004a FB60     		str	r3, [r7, #12]
 703 004c FB68     		ldr	r3, [r7, #12]
 704              	.LBE8:
 705              	.LBB9:
 298:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 706              		.loc 1 298 3
 707 004e 0023     		movs	r3, #0
 708 0050 BB60     		str	r3, [r7, #8]
 709 0052 194B     		ldr	r3, .L26
 710 0054 1B6B     		ldr	r3, [r3, #48]
 711 0056 184A     		ldr	r2, .L26
 712 0058 43F00103 		orr	r3, r3, #1
 713 005c 1363     		str	r3, [r2, #48]
 714 005e 164B     		ldr	r3, .L26
 715 0060 1B6B     		ldr	r3, [r3, #48]
 716 0062 03F00103 		and	r3, r3, #1
 717 0066 BB60     		str	r3, [r7, #8]
 718 0068 BB68     		ldr	r3, [r7, #8]
 719              	.LBE9:
 720              	.LBB10:
 299:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 721              		.loc 1 299 3
 722 006a 0023     		movs	r3, #0
 723 006c 7B60     		str	r3, [r7, #4]
 724 006e 124B     		ldr	r3, .L26
 725 0070 1B6B     		ldr	r3, [r3, #48]
 726 0072 114A     		ldr	r2, .L26
 727 0074 43F00203 		orr	r3, r3, #2
 728 0078 1363     		str	r3, [r2, #48]
 729 007a 0F4B     		ldr	r3, .L26
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 19


 730 007c 1B6B     		ldr	r3, [r3, #48]
 731 007e 03F00203 		and	r3, r3, #2
 732 0082 7B60     		str	r3, [r7, #4]
 733 0084 7B68     		ldr	r3, [r7, #4]
 734              	.LBE10:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 302:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 735              		.loc 1 302 3
 736 0086 0022     		movs	r2, #0
 737 0088 4FF40051 		mov	r1, #8192
 738 008c 0B48     		ldr	r0, .L26+4
 739 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 305:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 740              		.loc 1 305 23
 741 0092 4FF40053 		mov	r3, #8192
 742 0096 7B61     		str	r3, [r7, #20]
 306:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 743              		.loc 1 306 24
 744 0098 0123     		movs	r3, #1
 745 009a BB61     		str	r3, [r7, #24]
 307:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 746              		.loc 1 307 24
 747 009c 0023     		movs	r3, #0
 748 009e FB61     		str	r3, [r7, #28]
 308:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 749              		.loc 1 308 25
 750 00a0 0023     		movs	r3, #0
 751 00a2 3B62     		str	r3, [r7, #32]
 309:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 752              		.loc 1 309 3
 753 00a4 07F11403 		add	r3, r7, #20
 754 00a8 1946     		mov	r1, r3
 755 00aa 0448     		ldr	r0, .L26+4
 756 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 312:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 313:Core/Src/main.c **** }
 757              		.loc 1 313 1
 758 00b0 00BF     		nop
 759 00b2 2837     		adds	r7, r7, #40
 760              	.LCFI21:
 761              		.cfi_def_cfa_offset 8
 762 00b4 BD46     		mov	sp, r7
 763              	.LCFI22:
 764              		.cfi_def_cfa_register 13
 765              		@ sp needed
 766 00b6 80BD     		pop	{r7, pc}
 767              	.L27:
 768              		.align	2
 769              	.L26:
 770 00b8 00380240 		.word	1073887232
 771 00bc 00080240 		.word	1073874944
 772              		.cfi_endproc
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 20


 773              	.LFE224:
 775              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 776              		.align	1
 777              		.global	HAL_TIM_PeriodElapsedCallback
 778              		.syntax unified
 779              		.thumb
 780              		.thumb_func
 782              	HAL_TIM_PeriodElapsedCallback:
 783              	.LFB225:
 314:Core/Src/main.c **** 
 315:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 316:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim){
 784              		.loc 1 316 62
 785              		.cfi_startproc
 786              		@ args = 0, pretend = 0, frame = 8
 787              		@ frame_needed = 1, uses_anonymous_args = 0
 788              		@ link register save eliminated.
 789 0000 80B4     		push	{r7}
 790              	.LCFI23:
 791              		.cfi_def_cfa_offset 4
 792              		.cfi_offset 7, -4
 793 0002 83B0     		sub	sp, sp, #12
 794              	.LCFI24:
 795              		.cfi_def_cfa_offset 16
 796 0004 00AF     		add	r7, sp, #0
 797              	.LCFI25:
 798              		.cfi_def_cfa_register 7
 799 0006 7860     		str	r0, [r7, #4]
 317:Core/Src/main.c **** }
 800              		.loc 1 317 1
 801 0008 00BF     		nop
 802 000a 0C37     		adds	r7, r7, #12
 803              	.LCFI26:
 804              		.cfi_def_cfa_offset 4
 805 000c BD46     		mov	sp, r7
 806              	.LCFI27:
 807              		.cfi_def_cfa_register 13
 808              		@ sp needed
 809 000e 5DF8047B 		ldr	r7, [sp], #4
 810              	.LCFI28:
 811              		.cfi_restore 7
 812              		.cfi_def_cfa_offset 0
 813 0012 7047     		bx	lr
 814              		.cfi_endproc
 815              	.LFE225:
 817              		.section	.text.Error_Handler,"ax",%progbits
 818              		.align	1
 819              		.global	Error_Handler
 820              		.syntax unified
 821              		.thumb
 822              		.thumb_func
 824              	Error_Handler:
 825              	.LFB226:
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /* USER CODE END 4 */
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /**
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 21


 322:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 323:Core/Src/main.c ****   * @retval None
 324:Core/Src/main.c ****   */
 325:Core/Src/main.c **** void Error_Handler(void)
 326:Core/Src/main.c **** {
 826              		.loc 1 326 1
 827              		.cfi_startproc
 828              		@ args = 0, pretend = 0, frame = 0
 829              		@ frame_needed = 1, uses_anonymous_args = 0
 830              		@ link register save eliminated.
 831 0000 80B4     		push	{r7}
 832              	.LCFI29:
 833              		.cfi_def_cfa_offset 4
 834              		.cfi_offset 7, -4
 835 0002 00AF     		add	r7, sp, #0
 836              	.LCFI30:
 837              		.cfi_def_cfa_register 7
 838              	.LBB11:
 839              	.LBB12:
 840              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 22


  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 23


  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 841              		.loc 2 142 3
 842              		.syntax unified
 843              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 844 0004 72B6     		cpsid i
 845              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 846              		.loc 2 143 1
 847              		.thumb
 848              		.syntax unified
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 24


 849 0006 00BF     		nop
 850              	.L30:
 851              	.LBE12:
 852              	.LBE11:
 327:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 328:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 329:Core/Src/main.c ****   __disable_irq();
 330:Core/Src/main.c ****   while (1)
 853              		.loc 1 330 9 discriminator 1
 854 0008 FEE7     		b	.L30
 855              		.cfi_endproc
 856              	.LFE226:
 858              		.text
 859              	.Letext0:
 860              		.file 3 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-
 861              		.file 4 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-
 862              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 863              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 864              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 865              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 866              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 867              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 868              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 869              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 870              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 871              		.file 14 "Core/Inc/main.h"
 872              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 873              		.file 16 "USB_DEVICE/App/usb_device.h"
 874              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 25


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:24     .bss.hadc1:00000000 hadc1
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:21     .bss.hadc1:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:31     .bss.htim3:00000000 htim3
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:28     .bss.htim3:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:38     .bss.gUSBRxBuffer:00000000 gUSBRxBuffer
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:35     .bss.gUSBRxBuffer:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:45     .bss.writeBuffer:00000000 writeBuffer
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:42     .bss.writeBuffer:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:52     .bss.readBuffer:00000000 readBuffer
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:49     .bss.readBuffer:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:59     .bss.read:00000000 read
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:56     .bss.read:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:66     .bss.bitNumber:00000000 bitNumber
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:63     .bss.bitNumber:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:73     .bss.cent:00000000 cent
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:70     .bss.cent:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:80     .bss.test:00000000 test
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:77     .bss.test:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:83     .text.main:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:89     .text.main:00000000 main
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:207    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:650    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:354    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:482    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:191    .text.main:0000008c $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:201    .text.SystemClock_Config:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:824    .text.Error_Handler:00000000 Error_Handler
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:343    .text.SystemClock_Config:000000c8 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:349    .text.MX_ADC1_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:470    .text.MX_ADC1_Init:00000098 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:477    .text.MX_TIM3_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:639    .text.MX_TIM3_Init:000000e8 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:645    .text.MX_GPIO_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:770    .text.MX_GPIO_Init:000000b8 $d
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:776    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:782    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s:818    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
MX_USB_DEVICE_Init
HAL_TIM_PWM_Start
HAL_ADC_Start
HAL_ADC_GetValue
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccZVLDno.s 			page 26


HAL_GPIO_WritePin
HAL_GPIO_Init
