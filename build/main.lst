ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	htim3
  20              		.section	.bss.htim3,"aw",%nobits
  21              		.align	2
  24              	htim3:
  25 0000 00000000 		.space	72
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	htim4
  27              		.section	.bss.htim4,"aw",%nobits
  28              		.align	2
  31              	htim4:
  32 0000 00000000 		.space	72
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	counter
  34              		.section	.bss.counter,"aw",%nobits
  35              		.align	1
  38              	counter:
  39 0000 0000     		.space	2
  40              		.global	subida
  41              		.section	.data.subida,"aw"
  44              	subida:
  45 0000 01       		.byte	1
  46              		.global	__aeabi_ui2d
  47              		.global	__aeabi_dmul
  48              		.global	__aeabi_dadd
  49              		.global	__aeabi_d2uiz
  50              		.global	__aeabi_dsub
  51              		.section	.text.main,"ax",%progbits
  52              		.align	1
  53              		.global	main
  54              		.syntax unified
  55              		.thumb
  56              		.thumb_func
  58              	main:
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 2


  59              	.LFB130:
  60              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include "button.h"
  25:Core/Src/main.c **** #include <stdbool.h>
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  45:Core/Src/main.c **** TIM_HandleTypeDef htim4;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* USER CODE BEGIN PV */
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** /* USER CODE END PV */
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  52:Core/Src/main.c **** void SystemClock_Config(void);
  53:Core/Src/main.c **** static void MX_GPIO_Init(void);
  54:Core/Src/main.c **** static void MX_TIM4_Init(void);
  55:Core/Src/main.c **** static void MX_TIM3_Init(void);
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 3


  56:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END PFP */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  61:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  62:Core/Src/main.c **** uint16_t counter = 0;
  63:Core/Src/main.c **** bool subida = true;
  64:Core/Src/main.c **** /* USER CODE END 0 */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /**
  67:Core/Src/main.c ****   * @brief  The application entry point.
  68:Core/Src/main.c ****   * @retval int
  69:Core/Src/main.c ****   */
  70:Core/Src/main.c **** int main(void)
  71:Core/Src/main.c **** {
  61              		.loc 1 71 1
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 1, uses_anonymous_args = 0
  65 0000 B0B5     		push	{r4, r5, r7, lr}
  66              	.LCFI0:
  67              		.cfi_def_cfa_offset 16
  68              		.cfi_offset 4, -16
  69              		.cfi_offset 5, -12
  70              		.cfi_offset 7, -8
  71              		.cfi_offset 14, -4
  72 0002 00AF     		add	r7, sp, #0
  73              	.LCFI1:
  74              		.cfi_def_cfa_register 7
  72:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  73:Core/Src/main.c ****   
  74:Core/Src/main.c ****   /* USER CODE END 1 */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  79:Core/Src/main.c ****   HAL_Init();
  75              		.loc 1 79 3
  76 0004 FFF7FEFF 		bl	HAL_Init
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END Init */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Configure the system clock */
  86:Core/Src/main.c ****   SystemClock_Config();
  77              		.loc 1 86 3
  78 0008 FFF7FEFF 		bl	SystemClock_Config
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END SysInit */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Initialize all configured peripherals */
  93:Core/Src/main.c ****   MX_GPIO_Init();
  79              		.loc 1 93 3
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 4


  80 000c FFF7FEFF 		bl	MX_GPIO_Init
  94:Core/Src/main.c ****   MX_TIM4_Init();
  81              		.loc 1 94 3
  82 0010 FFF7FEFF 		bl	MX_TIM4_Init
  95:Core/Src/main.c ****   MX_TIM3_Init();
  83              		.loc 1 95 3
  84 0014 FFF7FEFF 		bl	MX_TIM3_Init
  96:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  97:Core/Src/main.c ****   HAL_TIM_Base_Start_IT(&htim3);
  85              		.loc 1 97 3
  86 0018 3348     		ldr	r0, .L5
  87 001a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  98:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_1);
  88              		.loc 1 98 3
  89 001e 0021     		movs	r1, #0
  90 0020 3248     		ldr	r0, .L5+4
  91 0022 FFF7FEFF 		bl	HAL_TIM_PWM_Start
  99:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_2);
  92              		.loc 1 99 3
  93 0026 0421     		movs	r1, #4
  94 0028 3048     		ldr	r0, .L5+4
  95 002a FFF7FEFF 		bl	HAL_TIM_PWM_Start
  96              	.L4:
 100:Core/Src/main.c ****   /* USER CODE END 2 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* Infinite loop */
 103:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 104:Core/Src/main.c ****   while (1)
 105:Core/Src/main.c ****   {
 106:Core/Src/main.c ****     /* USER CODE END WHILE */;
 107:Core/Src/main.c ****     if(button_release(GPIOB,BTN1_Pin,0)){
  97              		.loc 1 107 8
  98 002e 0022     		movs	r2, #0
  99 0030 4FF40041 		mov	r1, #32768
 100 0034 2E48     		ldr	r0, .L5+8
 101 0036 FFF7FEFF 		bl	button_release
 102 003a 0346     		mov	r3, r0
 103              		.loc 1 107 7
 104 003c 002B     		cmp	r3, #0
 105 003e 23D0     		beq	.L2
 108:Core/Src/main.c ****       TIM4 -> CCR2 += (TIM4 -> ARR) * 0.125;
 106              		.loc 1 108 29
 107 0040 2C4B     		ldr	r3, .L5+12
 108 0042 DB6A     		ldr	r3, [r3, #44]
 109              		.loc 1 108 37
 110 0044 1846     		mov	r0, r3
 111 0046 FFF7FEFF 		bl	__aeabi_ui2d
 112 004a 4FF00002 		mov	r2, #0
 113 004e 4FF07F53 		mov	r3, #1069547520
 114 0052 FFF7FEFF 		bl	__aeabi_dmul
 115 0056 0246     		mov	r2, r0
 116 0058 0B46     		mov	r3, r1
 117 005a 1446     		mov	r4, r2
 118 005c 1D46     		mov	r5, r3
 119              		.loc 1 108 20
 120 005e 254B     		ldr	r3, .L5+12
 121 0060 9B6B     		ldr	r3, [r3, #56]
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 5


 122 0062 1846     		mov	r0, r3
 123 0064 FFF7FEFF 		bl	__aeabi_ui2d
 124 0068 0246     		mov	r2, r0
 125 006a 0B46     		mov	r3, r1
 126 006c 2046     		mov	r0, r4
 127 006e 2946     		mov	r1, r5
 128 0070 FFF7FEFF 		bl	__aeabi_dadd
 129 0074 0246     		mov	r2, r0
 130 0076 0B46     		mov	r3, r1
 131 0078 1E4C     		ldr	r4, .L5+12
 132 007a 1046     		mov	r0, r2
 133 007c 1946     		mov	r1, r3
 134 007e FFF7FEFF 		bl	__aeabi_d2uiz
 135 0082 0346     		mov	r3, r0
 136 0084 A363     		str	r3, [r4, #56]
 137 0086 D2E7     		b	.L4
 138              	.L2:
 109:Core/Src/main.c ****     }
 110:Core/Src/main.c ****     else if(button_release(GPIOB,BTN2_Pin,0) && (TIM4 -> CCR2)>0){
 139              		.loc 1 110 13
 140 0088 0022     		movs	r2, #0
 141 008a 4FF48051 		mov	r1, #4096
 142 008e 1848     		ldr	r0, .L5+8
 143 0090 FFF7FEFF 		bl	button_release
 144 0094 0346     		mov	r3, r0
 145              		.loc 1 110 12
 146 0096 002B     		cmp	r3, #0
 147 0098 C9D0     		beq	.L4
 148              		.loc 1 110 55 discriminator 1
 149 009a 164B     		ldr	r3, .L5+12
 150 009c 9B6B     		ldr	r3, [r3, #56]
 151              		.loc 1 110 46 discriminator 1
 152 009e 002B     		cmp	r3, #0
 153 00a0 C5D0     		beq	.L4
 111:Core/Src/main.c ****       TIM4 -> CCR2 -= (TIM4 -> ARR) * 0.125;
 154              		.loc 1 111 29
 155 00a2 144B     		ldr	r3, .L5+12
 156 00a4 DB6A     		ldr	r3, [r3, #44]
 157              		.loc 1 111 37
 158 00a6 1846     		mov	r0, r3
 159 00a8 FFF7FEFF 		bl	__aeabi_ui2d
 160 00ac 4FF00002 		mov	r2, #0
 161 00b0 4FF07F53 		mov	r3, #1069547520
 162 00b4 FFF7FEFF 		bl	__aeabi_dmul
 163 00b8 0246     		mov	r2, r0
 164 00ba 0B46     		mov	r3, r1
 165 00bc 1446     		mov	r4, r2
 166 00be 1D46     		mov	r5, r3
 167              		.loc 1 111 20
 168 00c0 0C4B     		ldr	r3, .L5+12
 169 00c2 9B6B     		ldr	r3, [r3, #56]
 170 00c4 1846     		mov	r0, r3
 171 00c6 FFF7FEFF 		bl	__aeabi_ui2d
 172 00ca 2246     		mov	r2, r4
 173 00cc 2B46     		mov	r3, r5
 174 00ce FFF7FEFF 		bl	__aeabi_dsub
 175 00d2 0246     		mov	r2, r0
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 6


 176 00d4 0B46     		mov	r3, r1
 177 00d6 074C     		ldr	r4, .L5+12
 178 00d8 1046     		mov	r0, r2
 179 00da 1946     		mov	r1, r3
 180 00dc FFF7FEFF 		bl	__aeabi_d2uiz
 181 00e0 0346     		mov	r3, r0
 182 00e2 A363     		str	r3, [r4, #56]
 107:Core/Src/main.c ****       TIM4 -> CCR2 += (TIM4 -> ARR) * 0.125;
 183              		.loc 1 107 7
 184 00e4 A3E7     		b	.L4
 185              	.L6:
 186 00e6 00BF     		.align	2
 187              	.L5:
 188 00e8 00000000 		.word	htim3
 189 00ec 00000000 		.word	htim4
 190 00f0 00040240 		.word	1073873920
 191 00f4 00080040 		.word	1073743872
 192              		.cfi_endproc
 193              	.LFE130:
 195              		.section	.text.SystemClock_Config,"ax",%progbits
 196              		.align	1
 197              		.global	SystemClock_Config
 198              		.syntax unified
 199              		.thumb
 200              		.thumb_func
 202              	SystemClock_Config:
 203              	.LFB131:
 112:Core/Src/main.c ****     }
 113:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 114:Core/Src/main.c ****   }
 115:Core/Src/main.c ****   /* USER CODE END 3 */
 116:Core/Src/main.c **** }
 117:Core/Src/main.c **** 
 118:Core/Src/main.c **** /**
 119:Core/Src/main.c ****   * @brief System Clock Configuration
 120:Core/Src/main.c ****   * @retval None
 121:Core/Src/main.c ****   */
 122:Core/Src/main.c **** void SystemClock_Config(void)
 123:Core/Src/main.c **** {
 204              		.loc 1 123 1
 205              		.cfi_startproc
 206              		@ args = 0, pretend = 0, frame = 80
 207              		@ frame_needed = 1, uses_anonymous_args = 0
 208 0000 80B5     		push	{r7, lr}
 209              	.LCFI2:
 210              		.cfi_def_cfa_offset 8
 211              		.cfi_offset 7, -8
 212              		.cfi_offset 14, -4
 213 0002 94B0     		sub	sp, sp, #80
 214              	.LCFI3:
 215              		.cfi_def_cfa_offset 88
 216 0004 00AF     		add	r7, sp, #0
 217              	.LCFI4:
 218              		.cfi_def_cfa_register 7
 124:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 219              		.loc 1 124 22
 220 0006 07F12003 		add	r3, r7, #32
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 7


 221 000a 3022     		movs	r2, #48
 222 000c 0021     		movs	r1, #0
 223 000e 1846     		mov	r0, r3
 224 0010 FFF7FEFF 		bl	memset
 125:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 225              		.loc 1 125 22
 226 0014 07F10C03 		add	r3, r7, #12
 227 0018 0022     		movs	r2, #0
 228 001a 1A60     		str	r2, [r3]
 229 001c 5A60     		str	r2, [r3, #4]
 230 001e 9A60     		str	r2, [r3, #8]
 231 0020 DA60     		str	r2, [r3, #12]
 232 0022 1A61     		str	r2, [r3, #16]
 233              	.LBB4:
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 128:Core/Src/main.c ****   */
 129:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 234              		.loc 1 129 3
 235 0024 0023     		movs	r3, #0
 236 0026 BB60     		str	r3, [r7, #8]
 237 0028 274B     		ldr	r3, .L11
 238 002a 1B6C     		ldr	r3, [r3, #64]
 239 002c 264A     		ldr	r2, .L11
 240 002e 43F08053 		orr	r3, r3, #268435456
 241 0032 1364     		str	r3, [r2, #64]
 242 0034 244B     		ldr	r3, .L11
 243 0036 1B6C     		ldr	r3, [r3, #64]
 244 0038 03F08053 		and	r3, r3, #268435456
 245 003c BB60     		str	r3, [r7, #8]
 246 003e BB68     		ldr	r3, [r7, #8]
 247              	.LBE4:
 248              	.LBB5:
 130:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 249              		.loc 1 130 3
 250 0040 0023     		movs	r3, #0
 251 0042 7B60     		str	r3, [r7, #4]
 252 0044 214B     		ldr	r3, .L11+4
 253 0046 1B68     		ldr	r3, [r3]
 254 0048 204A     		ldr	r2, .L11+4
 255 004a 43F44043 		orr	r3, r3, #49152
 256 004e 1360     		str	r3, [r2]
 257 0050 1E4B     		ldr	r3, .L11+4
 258 0052 1B68     		ldr	r3, [r3]
 259 0054 03F44043 		and	r3, r3, #49152
 260 0058 7B60     		str	r3, [r7, #4]
 261 005a 7B68     		ldr	r3, [r7, #4]
 262              	.LBE5:
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 133:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 263              		.loc 1 135 36
 264 005c 0123     		movs	r3, #1
 265 005e 3B62     		str	r3, [r7, #32]
 136:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 8


 266              		.loc 1 136 30
 267 0060 4FF48033 		mov	r3, #65536
 268 0064 7B62     		str	r3, [r7, #36]
 137:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 269              		.loc 1 137 34
 270 0066 0223     		movs	r3, #2
 271 0068 BB63     		str	r3, [r7, #56]
 138:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 272              		.loc 1 138 35
 273 006a 4FF48003 		mov	r3, #4194304
 274 006e FB63     		str	r3, [r7, #60]
 139:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 275              		.loc 1 139 30
 276 0070 1923     		movs	r3, #25
 277 0072 3B64     		str	r3, [r7, #64]
 140:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 278              		.loc 1 140 30
 279 0074 C023     		movs	r3, #192
 280 0076 7B64     		str	r3, [r7, #68]
 141:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 281              		.loc 1 141 30
 282 0078 0223     		movs	r3, #2
 283 007a BB64     		str	r3, [r7, #72]
 142:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 284              		.loc 1 142 30
 285 007c 0423     		movs	r3, #4
 286 007e FB64     		str	r3, [r7, #76]
 143:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 287              		.loc 1 143 7
 288 0080 07F12003 		add	r3, r7, #32
 289 0084 1846     		mov	r0, r3
 290 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 291 008a 0346     		mov	r3, r0
 292              		.loc 1 143 6
 293 008c 002B     		cmp	r3, #0
 294 008e 01D0     		beq	.L8
 144:Core/Src/main.c ****   {
 145:Core/Src/main.c ****     Error_Handler();
 295              		.loc 1 145 5
 296 0090 FFF7FEFF 		bl	Error_Handler
 297              	.L8:
 146:Core/Src/main.c ****   }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 298              		.loc 1 150 31
 299 0094 0F23     		movs	r3, #15
 300 0096 FB60     		str	r3, [r7, #12]
 151:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 152:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 301              		.loc 1 152 34
 302 0098 0223     		movs	r3, #2
 303 009a 3B61     		str	r3, [r7, #16]
 153:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 304              		.loc 1 153 35
 305 009c 0023     		movs	r3, #0
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 9


 306 009e 7B61     		str	r3, [r7, #20]
 154:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 307              		.loc 1 154 36
 308 00a0 4FF48053 		mov	r3, #4096
 309 00a4 BB61     		str	r3, [r7, #24]
 155:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 310              		.loc 1 155 36
 311 00a6 0023     		movs	r3, #0
 312 00a8 FB61     		str	r3, [r7, #28]
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 313              		.loc 1 157 7
 314 00aa 07F10C03 		add	r3, r7, #12
 315 00ae 0321     		movs	r1, #3
 316 00b0 1846     		mov	r0, r3
 317 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 318 00b6 0346     		mov	r3, r0
 319              		.loc 1 157 6
 320 00b8 002B     		cmp	r3, #0
 321 00ba 01D0     		beq	.L10
 158:Core/Src/main.c ****   {
 159:Core/Src/main.c ****     Error_Handler();
 322              		.loc 1 159 5
 323 00bc FFF7FEFF 		bl	Error_Handler
 324              	.L10:
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** }
 325              		.loc 1 161 1
 326 00c0 00BF     		nop
 327 00c2 5037     		adds	r7, r7, #80
 328              	.LCFI5:
 329              		.cfi_def_cfa_offset 8
 330 00c4 BD46     		mov	sp, r7
 331              	.LCFI6:
 332              		.cfi_def_cfa_register 13
 333              		@ sp needed
 334 00c6 80BD     		pop	{r7, pc}
 335              	.L12:
 336              		.align	2
 337              	.L11:
 338 00c8 00380240 		.word	1073887232
 339 00cc 00700040 		.word	1073770496
 340              		.cfi_endproc
 341              	.LFE131:
 343              		.section	.text.MX_TIM3_Init,"ax",%progbits
 344              		.align	1
 345              		.syntax unified
 346              		.thumb
 347              		.thumb_func
 349              	MX_TIM3_Init:
 350              	.LFB132:
 162:Core/Src/main.c **** 
 163:Core/Src/main.c **** /**
 164:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 165:Core/Src/main.c ****   * @param None
 166:Core/Src/main.c ****   * @retval None
 167:Core/Src/main.c ****   */
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 10


 168:Core/Src/main.c **** static void MX_TIM3_Init(void)
 169:Core/Src/main.c **** {
 351              		.loc 1 169 1
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 40
 354              		@ frame_needed = 1, uses_anonymous_args = 0
 355 0000 80B5     		push	{r7, lr}
 356              	.LCFI7:
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 7, -8
 359              		.cfi_offset 14, -4
 360 0002 8AB0     		sub	sp, sp, #40
 361              	.LCFI8:
 362              		.cfi_def_cfa_offset 48
 363 0004 00AF     		add	r7, sp, #0
 364              	.LCFI9:
 365              		.cfi_def_cfa_register 7
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 366              		.loc 1 175 26
 367 0006 07F11803 		add	r3, r7, #24
 368 000a 0022     		movs	r2, #0
 369 000c 1A60     		str	r2, [r3]
 370 000e 5A60     		str	r2, [r3, #4]
 371 0010 9A60     		str	r2, [r3, #8]
 372 0012 DA60     		str	r2, [r3, #12]
 176:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 373              		.loc 1 176 27
 374 0014 07F11003 		add	r3, r7, #16
 375 0018 0022     		movs	r2, #0
 376 001a 1A60     		str	r2, [r3]
 377 001c 5A60     		str	r2, [r3, #4]
 177:Core/Src/main.c ****   TIM_IC_InitTypeDef sConfigIC = {0};
 378              		.loc 1 177 22
 379 001e 3B46     		mov	r3, r7
 380 0020 0022     		movs	r2, #0
 381 0022 1A60     		str	r2, [r3]
 382 0024 5A60     		str	r2, [r3, #4]
 383 0026 9A60     		str	r2, [r3, #8]
 384 0028 DA60     		str	r2, [r3, #12]
 178:Core/Src/main.c **** 
 179:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 182:Core/Src/main.c ****   htim3.Instance = TIM3;
 385              		.loc 1 182 18
 386 002a 2C4B     		ldr	r3, .L20
 387 002c 2C4A     		ldr	r2, .L20+4
 388 002e 1A60     		str	r2, [r3]
 183:Core/Src/main.c ****   htim3.Init.Prescaler = 9600-1;
 389              		.loc 1 183 24
 390 0030 2A4B     		ldr	r3, .L20
 391 0032 42F27F52 		movw	r2, #9599
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 11


 392 0036 5A60     		str	r2, [r3, #4]
 184:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 393              		.loc 1 184 26
 394 0038 284B     		ldr	r3, .L20
 395 003a 0022     		movs	r2, #0
 396 003c 9A60     		str	r2, [r3, #8]
 185:Core/Src/main.c ****   htim3.Init.Period = 5000;
 397              		.loc 1 185 21
 398 003e 274B     		ldr	r3, .L20
 399 0040 41F28832 		movw	r2, #5000
 400 0044 DA60     		str	r2, [r3, #12]
 186:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 401              		.loc 1 186 28
 402 0046 254B     		ldr	r3, .L20
 403 0048 0022     		movs	r2, #0
 404 004a 1A61     		str	r2, [r3, #16]
 187:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 405              		.loc 1 187 32
 406 004c 234B     		ldr	r3, .L20
 407 004e 0022     		movs	r2, #0
 408 0050 9A61     		str	r2, [r3, #24]
 188:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 409              		.loc 1 188 7
 410 0052 2248     		ldr	r0, .L20
 411 0054 FFF7FEFF 		bl	HAL_TIM_Base_Init
 412 0058 0346     		mov	r3, r0
 413              		.loc 1 188 6
 414 005a 002B     		cmp	r3, #0
 415 005c 01D0     		beq	.L14
 189:Core/Src/main.c ****   {
 190:Core/Src/main.c ****     Error_Handler();
 416              		.loc 1 190 5
 417 005e FFF7FEFF 		bl	Error_Handler
 418              	.L14:
 191:Core/Src/main.c ****   }
 192:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 419              		.loc 1 192 34
 420 0062 4FF48053 		mov	r3, #4096
 421 0066 BB61     		str	r3, [r7, #24]
 193:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 422              		.loc 1 193 7
 423 0068 07F11803 		add	r3, r7, #24
 424 006c 1946     		mov	r1, r3
 425 006e 1B48     		ldr	r0, .L20
 426 0070 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 427 0074 0346     		mov	r3, r0
 428              		.loc 1 193 6
 429 0076 002B     		cmp	r3, #0
 430 0078 01D0     		beq	.L15
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 431              		.loc 1 195 5
 432 007a FFF7FEFF 		bl	Error_Handler
 433              	.L15:
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c ****   if (HAL_TIM_IC_Init(&htim3) != HAL_OK)
 434              		.loc 1 197 7
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 12


 435 007e 1748     		ldr	r0, .L20
 436 0080 FFF7FEFF 		bl	HAL_TIM_IC_Init
 437 0084 0346     		mov	r3, r0
 438              		.loc 1 197 6
 439 0086 002B     		cmp	r3, #0
 440 0088 01D0     		beq	.L16
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 441              		.loc 1 199 5
 442 008a FFF7FEFF 		bl	Error_Handler
 443              	.L16:
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 444              		.loc 1 201 37
 445 008e 0023     		movs	r3, #0
 446 0090 3B61     		str	r3, [r7, #16]
 202:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 447              		.loc 1 202 33
 448 0092 0023     		movs	r3, #0
 449 0094 7B61     		str	r3, [r7, #20]
 203:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 450              		.loc 1 203 7
 451 0096 07F11003 		add	r3, r7, #16
 452 009a 1946     		mov	r1, r3
 453 009c 0F48     		ldr	r0, .L20
 454 009e FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 455 00a2 0346     		mov	r3, r0
 456              		.loc 1 203 6
 457 00a4 002B     		cmp	r3, #0
 458 00a6 01D0     		beq	.L17
 204:Core/Src/main.c ****   {
 205:Core/Src/main.c ****     Error_Handler();
 459              		.loc 1 205 5
 460 00a8 FFF7FEFF 		bl	Error_Handler
 461              	.L17:
 206:Core/Src/main.c ****   }
 207:Core/Src/main.c ****   sConfigIC.ICPolarity = TIM_INPUTCHANNELPOLARITY_RISING;
 462              		.loc 1 207 24
 463 00ac 0023     		movs	r3, #0
 464 00ae 3B60     		str	r3, [r7]
 208:Core/Src/main.c ****   sConfigIC.ICSelection = TIM_ICSELECTION_DIRECTTI;
 465              		.loc 1 208 25
 466 00b0 0123     		movs	r3, #1
 467 00b2 7B60     		str	r3, [r7, #4]
 209:Core/Src/main.c ****   sConfigIC.ICPrescaler = TIM_ICPSC_DIV1;
 468              		.loc 1 209 25
 469 00b4 0023     		movs	r3, #0
 470 00b6 BB60     		str	r3, [r7, #8]
 210:Core/Src/main.c ****   sConfigIC.ICFilter = 0;
 471              		.loc 1 210 22
 472 00b8 0023     		movs	r3, #0
 473 00ba FB60     		str	r3, [r7, #12]
 211:Core/Src/main.c ****   if (HAL_TIM_IC_ConfigChannel(&htim3, &sConfigIC, TIM_CHANNEL_1) != HAL_OK)
 474              		.loc 1 211 7
 475 00bc 3B46     		mov	r3, r7
 476 00be 0022     		movs	r2, #0
 477 00c0 1946     		mov	r1, r3
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 13


 478 00c2 0648     		ldr	r0, .L20
 479 00c4 FFF7FEFF 		bl	HAL_TIM_IC_ConfigChannel
 480 00c8 0346     		mov	r3, r0
 481              		.loc 1 211 6
 482 00ca 002B     		cmp	r3, #0
 483 00cc 01D0     		beq	.L19
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 484              		.loc 1 213 5
 485 00ce FFF7FEFF 		bl	Error_Handler
 486              	.L19:
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 216:Core/Src/main.c **** 
 217:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** }
 487              		.loc 1 219 1
 488 00d2 00BF     		nop
 489 00d4 2837     		adds	r7, r7, #40
 490              	.LCFI10:
 491              		.cfi_def_cfa_offset 8
 492 00d6 BD46     		mov	sp, r7
 493              	.LCFI11:
 494              		.cfi_def_cfa_register 13
 495              		@ sp needed
 496 00d8 80BD     		pop	{r7, pc}
 497              	.L21:
 498 00da 00BF     		.align	2
 499              	.L20:
 500 00dc 00000000 		.word	htim3
 501 00e0 00040040 		.word	1073742848
 502              		.cfi_endproc
 503              	.LFE132:
 505              		.section	.text.MX_TIM4_Init,"ax",%progbits
 506              		.align	1
 507              		.syntax unified
 508              		.thumb
 509              		.thumb_func
 511              	MX_TIM4_Init:
 512              	.LFB133:
 220:Core/Src/main.c **** 
 221:Core/Src/main.c **** /**
 222:Core/Src/main.c ****   * @brief TIM4 Initialization Function
 223:Core/Src/main.c ****   * @param None
 224:Core/Src/main.c ****   * @retval None
 225:Core/Src/main.c ****   */
 226:Core/Src/main.c **** static void MX_TIM4_Init(void)
 227:Core/Src/main.c **** {
 513              		.loc 1 227 1
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 56
 516              		@ frame_needed = 1, uses_anonymous_args = 0
 517 0000 80B5     		push	{r7, lr}
 518              	.LCFI12:
 519              		.cfi_def_cfa_offset 8
 520              		.cfi_offset 7, -8
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 14


 521              		.cfi_offset 14, -4
 522 0002 8EB0     		sub	sp, sp, #56
 523              	.LCFI13:
 524              		.cfi_def_cfa_offset 64
 525 0004 00AF     		add	r7, sp, #0
 526              	.LCFI14:
 527              		.cfi_def_cfa_register 7
 228:Core/Src/main.c **** 
 229:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 0 */
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****   /* USER CODE END TIM4_Init 0 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 528              		.loc 1 233 26
 529 0006 07F12803 		add	r3, r7, #40
 530 000a 0022     		movs	r2, #0
 531 000c 1A60     		str	r2, [r3]
 532 000e 5A60     		str	r2, [r3, #4]
 533 0010 9A60     		str	r2, [r3, #8]
 534 0012 DA60     		str	r2, [r3, #12]
 234:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
 535              		.loc 1 234 27
 536 0014 07F12003 		add	r3, r7, #32
 537 0018 0022     		movs	r2, #0
 538 001a 1A60     		str	r2, [r3]
 539 001c 5A60     		str	r2, [r3, #4]
 235:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 540              		.loc 1 235 22
 541 001e 3B1D     		adds	r3, r7, #4
 542 0020 0022     		movs	r2, #0
 543 0022 1A60     		str	r2, [r3]
 544 0024 5A60     		str	r2, [r3, #4]
 545 0026 9A60     		str	r2, [r3, #8]
 546 0028 DA60     		str	r2, [r3, #12]
 547 002a 1A61     		str	r2, [r3, #16]
 548 002c 5A61     		str	r2, [r3, #20]
 549 002e 9A61     		str	r2, [r3, #24]
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 1 */
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE END TIM4_Init 1 */
 240:Core/Src/main.c ****   htim4.Instance = TIM4;
 550              		.loc 1 240 18
 551 0030 324B     		ldr	r3, .L29
 552 0032 334A     		ldr	r2, .L29+4
 553 0034 1A60     		str	r2, [r3]
 241:Core/Src/main.c ****   htim4.Init.Prescaler = 1;
 554              		.loc 1 241 24
 555 0036 314B     		ldr	r3, .L29
 556 0038 0122     		movs	r2, #1
 557 003a 5A60     		str	r2, [r3, #4]
 242:Core/Src/main.c ****   htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 558              		.loc 1 242 26
 559 003c 2F4B     		ldr	r3, .L29
 560 003e 0022     		movs	r2, #0
 561 0040 9A60     		str	r2, [r3, #8]
 243:Core/Src/main.c ****   htim4.Init.Period = 5647;
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 15


 562              		.loc 1 243 21
 563 0042 2E4B     		ldr	r3, .L29
 564 0044 41F20F62 		movw	r2, #5647
 565 0048 DA60     		str	r2, [r3, #12]
 244:Core/Src/main.c ****   htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 566              		.loc 1 244 28
 567 004a 2C4B     		ldr	r3, .L29
 568 004c 0022     		movs	r2, #0
 569 004e 1A61     		str	r2, [r3, #16]
 245:Core/Src/main.c ****   htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 570              		.loc 1 245 32
 571 0050 2A4B     		ldr	r3, .L29
 572 0052 0022     		movs	r2, #0
 573 0054 9A61     		str	r2, [r3, #24]
 246:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 574              		.loc 1 246 7
 575 0056 2948     		ldr	r0, .L29
 576 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 577 005c 0346     		mov	r3, r0
 578              		.loc 1 246 6
 579 005e 002B     		cmp	r3, #0
 580 0060 01D0     		beq	.L23
 247:Core/Src/main.c ****   {
 248:Core/Src/main.c ****     Error_Handler();
 581              		.loc 1 248 5
 582 0062 FFF7FEFF 		bl	Error_Handler
 583              	.L23:
 249:Core/Src/main.c ****   }
 250:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 584              		.loc 1 250 34
 585 0066 4FF48053 		mov	r3, #4096
 586 006a BB62     		str	r3, [r7, #40]
 251:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 587              		.loc 1 251 7
 588 006c 07F12803 		add	r3, r7, #40
 589 0070 1946     		mov	r1, r3
 590 0072 2248     		ldr	r0, .L29
 591 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 592 0078 0346     		mov	r3, r0
 593              		.loc 1 251 6
 594 007a 002B     		cmp	r3, #0
 595 007c 01D0     		beq	.L24
 252:Core/Src/main.c ****   {
 253:Core/Src/main.c ****     Error_Handler();
 596              		.loc 1 253 5
 597 007e FFF7FEFF 		bl	Error_Handler
 598              	.L24:
 254:Core/Src/main.c ****   }
 255:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 599              		.loc 1 255 7
 600 0082 1E48     		ldr	r0, .L29
 601 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 602 0088 0346     		mov	r3, r0
 603              		.loc 1 255 6
 604 008a 002B     		cmp	r3, #0
 605 008c 01D0     		beq	.L25
 256:Core/Src/main.c ****   {
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 16


 257:Core/Src/main.c ****     Error_Handler();
 606              		.loc 1 257 5
 607 008e FFF7FEFF 		bl	Error_Handler
 608              	.L25:
 258:Core/Src/main.c ****   }
 259:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 609              		.loc 1 259 37
 610 0092 0023     		movs	r3, #0
 611 0094 3B62     		str	r3, [r7, #32]
 260:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 612              		.loc 1 260 33
 613 0096 0023     		movs	r3, #0
 614 0098 7B62     		str	r3, [r7, #36]
 261:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 615              		.loc 1 261 7
 616 009a 07F12003 		add	r3, r7, #32
 617 009e 1946     		mov	r1, r3
 618 00a0 1648     		ldr	r0, .L29
 619 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 620 00a6 0346     		mov	r3, r0
 621              		.loc 1 261 6
 622 00a8 002B     		cmp	r3, #0
 623 00aa 01D0     		beq	.L26
 262:Core/Src/main.c ****   {
 263:Core/Src/main.c ****     Error_Handler();
 624              		.loc 1 263 5
 625 00ac FFF7FEFF 		bl	Error_Handler
 626              	.L26:
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 627              		.loc 1 265 20
 628 00b0 6023     		movs	r3, #96
 629 00b2 7B60     		str	r3, [r7, #4]
 266:Core/Src/main.c ****   sConfigOC.Pulse = 0;
 630              		.loc 1 266 19
 631 00b4 0023     		movs	r3, #0
 632 00b6 BB60     		str	r3, [r7, #8]
 267:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 633              		.loc 1 267 24
 634 00b8 0023     		movs	r3, #0
 635 00ba FB60     		str	r3, [r7, #12]
 268:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 636              		.loc 1 268 24
 637 00bc 0023     		movs	r3, #0
 638 00be 7B61     		str	r3, [r7, #20]
 269:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 639              		.loc 1 269 7
 640 00c0 3B1D     		adds	r3, r7, #4
 641 00c2 0022     		movs	r2, #0
 642 00c4 1946     		mov	r1, r3
 643 00c6 0D48     		ldr	r0, .L29
 644 00c8 FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 645 00cc 0346     		mov	r3, r0
 646              		.loc 1 269 6
 647 00ce 002B     		cmp	r3, #0
 648 00d0 01D0     		beq	.L27
 270:Core/Src/main.c ****   {
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 17


 271:Core/Src/main.c ****     Error_Handler();
 649              		.loc 1 271 5
 650 00d2 FFF7FEFF 		bl	Error_Handler
 651              	.L27:
 272:Core/Src/main.c ****   }
 273:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_2) != HAL_OK)
 652              		.loc 1 273 7
 653 00d6 3B1D     		adds	r3, r7, #4
 654 00d8 0422     		movs	r2, #4
 655 00da 1946     		mov	r1, r3
 656 00dc 0748     		ldr	r0, .L29
 657 00de FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 658 00e2 0346     		mov	r3, r0
 659              		.loc 1 273 6
 660 00e4 002B     		cmp	r3, #0
 661 00e6 01D0     		beq	.L28
 274:Core/Src/main.c ****   {
 275:Core/Src/main.c ****     Error_Handler();
 662              		.loc 1 275 5
 663 00e8 FFF7FEFF 		bl	Error_Handler
 664              	.L28:
 276:Core/Src/main.c ****   }
 277:Core/Src/main.c ****   /* USER CODE BEGIN TIM4_Init 2 */
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE END TIM4_Init 2 */
 280:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim4);
 665              		.loc 1 280 3
 666 00ec 0348     		ldr	r0, .L29
 667 00ee FFF7FEFF 		bl	HAL_TIM_MspPostInit
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** }
 668              		.loc 1 282 1
 669 00f2 00BF     		nop
 670 00f4 3837     		adds	r7, r7, #56
 671              	.LCFI15:
 672              		.cfi_def_cfa_offset 8
 673 00f6 BD46     		mov	sp, r7
 674              	.LCFI16:
 675              		.cfi_def_cfa_register 13
 676              		@ sp needed
 677 00f8 80BD     		pop	{r7, pc}
 678              	.L30:
 679 00fa 00BF     		.align	2
 680              	.L29:
 681 00fc 00000000 		.word	htim4
 682 0100 00080040 		.word	1073743872
 683              		.cfi_endproc
 684              	.LFE133:
 686              		.section	.text.MX_GPIO_Init,"ax",%progbits
 687              		.align	1
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 692              	MX_GPIO_Init:
 693              	.LFB134:
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 18


 285:Core/Src/main.c ****   * @brief GPIO Initialization Function
 286:Core/Src/main.c ****   * @param None
 287:Core/Src/main.c ****   * @retval None
 288:Core/Src/main.c ****   */
 289:Core/Src/main.c **** static void MX_GPIO_Init(void)
 290:Core/Src/main.c **** {
 694              		.loc 1 290 1
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 40
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698 0000 80B5     		push	{r7, lr}
 699              	.LCFI17:
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 8AB0     		sub	sp, sp, #40
 704              	.LCFI18:
 705              		.cfi_def_cfa_offset 48
 706 0004 00AF     		add	r7, sp, #0
 707              	.LCFI19:
 708              		.cfi_def_cfa_register 7
 291:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 709              		.loc 1 291 20
 710 0006 07F11403 		add	r3, r7, #20
 711 000a 0022     		movs	r2, #0
 712 000c 1A60     		str	r2, [r3]
 713 000e 5A60     		str	r2, [r3, #4]
 714 0010 9A60     		str	r2, [r3, #8]
 715 0012 DA60     		str	r2, [r3, #12]
 716 0014 1A61     		str	r2, [r3, #16]
 717              	.LBB6:
 292:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 293:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 294:Core/Src/main.c **** 
 295:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 296:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 718              		.loc 1 296 3
 719 0016 0023     		movs	r3, #0
 720 0018 3B61     		str	r3, [r7, #16]
 721 001a 2E4B     		ldr	r3, .L32
 722 001c 1B6B     		ldr	r3, [r3, #48]
 723 001e 2D4A     		ldr	r2, .L32
 724 0020 43F00403 		orr	r3, r3, #4
 725 0024 1363     		str	r3, [r2, #48]
 726 0026 2B4B     		ldr	r3, .L32
 727 0028 1B6B     		ldr	r3, [r3, #48]
 728 002a 03F00403 		and	r3, r3, #4
 729 002e 3B61     		str	r3, [r7, #16]
 730 0030 3B69     		ldr	r3, [r7, #16]
 731              	.LBE6:
 732              	.LBB7:
 297:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 733              		.loc 1 297 3
 734 0032 0023     		movs	r3, #0
 735 0034 FB60     		str	r3, [r7, #12]
 736 0036 274B     		ldr	r3, .L32
 737 0038 1B6B     		ldr	r3, [r3, #48]
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 19


 738 003a 264A     		ldr	r2, .L32
 739 003c 43F08003 		orr	r3, r3, #128
 740 0040 1363     		str	r3, [r2, #48]
 741 0042 244B     		ldr	r3, .L32
 742 0044 1B6B     		ldr	r3, [r3, #48]
 743 0046 03F08003 		and	r3, r3, #128
 744 004a FB60     		str	r3, [r7, #12]
 745 004c FB68     		ldr	r3, [r7, #12]
 746              	.LBE7:
 747              	.LBB8:
 298:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 748              		.loc 1 298 3
 749 004e 0023     		movs	r3, #0
 750 0050 BB60     		str	r3, [r7, #8]
 751 0052 204B     		ldr	r3, .L32
 752 0054 1B6B     		ldr	r3, [r3, #48]
 753 0056 1F4A     		ldr	r2, .L32
 754 0058 43F00203 		orr	r3, r3, #2
 755 005c 1363     		str	r3, [r2, #48]
 756 005e 1D4B     		ldr	r3, .L32
 757 0060 1B6B     		ldr	r3, [r3, #48]
 758 0062 03F00203 		and	r3, r3, #2
 759 0066 BB60     		str	r3, [r7, #8]
 760 0068 BB68     		ldr	r3, [r7, #8]
 761              	.LBE8:
 762              	.LBB9:
 299:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 763              		.loc 1 299 3
 764 006a 0023     		movs	r3, #0
 765 006c 7B60     		str	r3, [r7, #4]
 766 006e 194B     		ldr	r3, .L32
 767 0070 1B6B     		ldr	r3, [r3, #48]
 768 0072 184A     		ldr	r2, .L32
 769 0074 43F00103 		orr	r3, r3, #1
 770 0078 1363     		str	r3, [r2, #48]
 771 007a 164B     		ldr	r3, .L32
 772 007c 1B6B     		ldr	r3, [r3, #48]
 773 007e 03F00103 		and	r3, r3, #1
 774 0082 7B60     		str	r3, [r7, #4]
 775 0084 7B68     		ldr	r3, [r7, #4]
 776              	.LBE9:
 300:Core/Src/main.c **** 
 301:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 302:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 777              		.loc 1 302 3
 778 0086 0022     		movs	r2, #0
 779 0088 4FF40051 		mov	r1, #8192
 780 008c 1248     		ldr	r0, .L32+4
 781 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 303:Core/Src/main.c **** 
 304:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 305:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 782              		.loc 1 305 23
 783 0092 4FF40053 		mov	r3, #8192
 784 0096 7B61     		str	r3, [r7, #20]
 306:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 785              		.loc 1 306 24
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 20


 786 0098 0123     		movs	r3, #1
 787 009a BB61     		str	r3, [r7, #24]
 307:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 788              		.loc 1 307 24
 789 009c 0023     		movs	r3, #0
 790 009e FB61     		str	r3, [r7, #28]
 308:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 791              		.loc 1 308 25
 792 00a0 0023     		movs	r3, #0
 793 00a2 3B62     		str	r3, [r7, #32]
 309:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 794              		.loc 1 309 3
 795 00a4 07F11403 		add	r3, r7, #20
 796 00a8 1946     		mov	r1, r3
 797 00aa 0B48     		ldr	r0, .L32+4
 798 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 310:Core/Src/main.c **** 
 311:Core/Src/main.c ****   /*Configure GPIO pins : BTN2_Pin BTN1_Pin */
 312:Core/Src/main.c ****   GPIO_InitStruct.Pin = BTN2_Pin|BTN1_Pin;
 799              		.loc 1 312 23
 800 00b0 4FF41043 		mov	r3, #36864
 801 00b4 7B61     		str	r3, [r7, #20]
 313:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 802              		.loc 1 313 24
 803 00b6 0023     		movs	r3, #0
 804 00b8 BB61     		str	r3, [r7, #24]
 314:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 805              		.loc 1 314 24
 806 00ba 0023     		movs	r3, #0
 807 00bc FB61     		str	r3, [r7, #28]
 315:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 808              		.loc 1 315 3
 809 00be 07F11403 		add	r3, r7, #20
 810 00c2 1946     		mov	r1, r3
 811 00c4 0548     		ldr	r0, .L32+8
 812 00c6 FFF7FEFF 		bl	HAL_GPIO_Init
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 318:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 319:Core/Src/main.c **** }
 813              		.loc 1 319 1
 814 00ca 00BF     		nop
 815 00cc 2837     		adds	r7, r7, #40
 816              	.LCFI20:
 817              		.cfi_def_cfa_offset 8
 818 00ce BD46     		mov	sp, r7
 819              	.LCFI21:
 820              		.cfi_def_cfa_register 13
 821              		@ sp needed
 822 00d0 80BD     		pop	{r7, pc}
 823              	.L33:
 824 00d2 00BF     		.align	2
 825              	.L32:
 826 00d4 00380240 		.word	1073887232
 827 00d8 00080240 		.word	1073874944
 828 00dc 00040240 		.word	1073873920
 829              		.cfi_endproc
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 21


 830              	.LFE134:
 832              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
 833              		.align	1
 834              		.global	HAL_TIM_PeriodElapsedCallback
 835              		.syntax unified
 836              		.thumb
 837              		.thumb_func
 839              	HAL_TIM_PeriodElapsedCallback:
 840              	.LFB135:
 320:Core/Src/main.c **** 
 321:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 322:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim){
 841              		.loc 1 322 62
 842              		.cfi_startproc
 843              		@ args = 0, pretend = 0, frame = 8
 844              		@ frame_needed = 1, uses_anonymous_args = 0
 845 0000 90B5     		push	{r4, r7, lr}
 846              	.LCFI22:
 847              		.cfi_def_cfa_offset 12
 848              		.cfi_offset 4, -12
 849              		.cfi_offset 7, -8
 850              		.cfi_offset 14, -4
 851 0002 83B0     		sub	sp, sp, #12
 852              	.LCFI23:
 853              		.cfi_def_cfa_offset 24
 854 0004 00AF     		add	r7, sp, #0
 855              	.LCFI24:
 856              		.cfi_def_cfa_register 7
 857 0006 7860     		str	r0, [r7, #4]
 323:Core/Src/main.c ****   if (counter == 0) {
 858              		.loc 1 323 15
 859 0008 2C4B     		ldr	r3, .L40
 860 000a 1B88     		ldrh	r3, [r3]
 861              		.loc 1 323 6
 862 000c 002B     		cmp	r3, #0
 863 000e 06D1     		bne	.L35
 324:Core/Src/main.c ****     counter = 0;
 864              		.loc 1 324 13
 865 0010 2A4B     		ldr	r3, .L40
 866 0012 0022     		movs	r2, #0
 867 0014 1A80     		strh	r2, [r3]	@ movhi
 325:Core/Src/main.c ****     subida = true;
 868              		.loc 1 325 12
 869 0016 2A4B     		ldr	r3, .L40+4
 870 0018 0122     		movs	r2, #1
 871 001a 1A70     		strb	r2, [r3]
 872 001c 09E0     		b	.L36
 873              	.L35:
 326:Core/Src/main.c ****   }
 327:Core/Src/main.c ****   else if (counter == 9){
 874              		.loc 1 327 20
 875 001e 274B     		ldr	r3, .L40
 876 0020 1B88     		ldrh	r3, [r3]
 877              		.loc 1 327 11
 878 0022 092B     		cmp	r3, #9
 879 0024 05D1     		bne	.L36
 328:Core/Src/main.c ****     subida = false;
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 22


 880              		.loc 1 328 12
 881 0026 264B     		ldr	r3, .L40+4
 882 0028 0022     		movs	r2, #0
 883 002a 1A70     		strb	r2, [r3]
 329:Core/Src/main.c ****     counter = 4;
 884              		.loc 1 329 13
 885 002c 234B     		ldr	r3, .L40
 886 002e 0422     		movs	r2, #4
 887 0030 1A80     		strh	r2, [r3]	@ movhi
 888              	.L36:
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c ****   
 332:Core/Src/main.c ****   if (subida) {
 889              		.loc 1 332 7
 890 0032 234B     		ldr	r3, .L40+4
 891 0034 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 892              		.loc 1 332 6
 893 0036 002B     		cmp	r3, #0
 894 0038 1ED0     		beq	.L37
 333:Core/Src/main.c ****     TIM4 -> CCR1 = (TIM4 -> ARR) * counter *0.125;
 895              		.loc 1 333 26
 896 003a 224B     		ldr	r3, .L40+8
 897 003c DB6A     		ldr	r3, [r3, #44]
 898              		.loc 1 333 34
 899 003e 1F4A     		ldr	r2, .L40
 900 0040 1288     		ldrh	r2, [r2]
 901 0042 02FB03F3 		mul	r3, r2, r3
 902              		.loc 1 333 44
 903 0046 1846     		mov	r0, r3
 904 0048 FFF7FEFF 		bl	__aeabi_ui2d
 905 004c 4FF00002 		mov	r2, #0
 906 0050 4FF07F53 		mov	r3, #1069547520
 907 0054 FFF7FEFF 		bl	__aeabi_dmul
 908 0058 0246     		mov	r2, r0
 909 005a 0B46     		mov	r3, r1
 910              		.loc 1 333 10
 911 005c 194C     		ldr	r4, .L40+8
 912              		.loc 1 333 18
 913 005e 1046     		mov	r0, r2
 914 0060 1946     		mov	r1, r3
 915 0062 FFF7FEFF 		bl	__aeabi_d2uiz
 916 0066 0346     		mov	r3, r0
 917 0068 6363     		str	r3, [r4, #52]
 334:Core/Src/main.c ****     counter++;
 918              		.loc 1 334 12
 919 006a 144B     		ldr	r3, .L40
 920 006c 1B88     		ldrh	r3, [r3]
 921 006e 0133     		adds	r3, r3, #1
 922 0070 9AB2     		uxth	r2, r3
 923 0072 124B     		ldr	r3, .L40
 924 0074 1A80     		strh	r2, [r3]	@ movhi
 335:Core/Src/main.c ****   }
 336:Core/Src/main.c ****   else {
 337:Core/Src/main.c ****     TIM4 -> CCR1 = (TIM4 -> ARR) * counter* 0.25;
 338:Core/Src/main.c ****     counter --;
 339:Core/Src/main.c ****   }
 340:Core/Src/main.c **** 
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 23


 341:Core/Src/main.c ****   // if (counter == 4){
 342:Core/Src/main.c ****   //   subida = false;
 343:Core/Src/main.c ****   // }
 344:Core/Src/main.c ****   // else if (counter == 0){
 345:Core/Src/main.c ****   //   subida = true;
 346:Core/Src/main.c ****   // }
 347:Core/Src/main.c ****   
 348:Core/Src/main.c ****   // if(subida){
 349:Core/Src/main.c ****   //   counter++;
 350:Core/Src/main.c ****   // }
 351:Core/Src/main.c ****   // else{
 352:Core/Src/main.c ****   //   counter = counter - 2;
 353:Core/Src/main.c ****   // 
 354:Core/Src/main.c ****   // }
 355:Core/Src/main.c ****   // TIM4 -> CCR1 = counter*25 * (TIM4 -> ARR)/100;
 356:Core/Src/main.c ****   
 357:Core/Src/main.c **** }
 925              		.loc 1 357 1
 926 0076 1CE0     		b	.L39
 927              	.L37:
 337:Core/Src/main.c ****     counter --;
 928              		.loc 1 337 26
 929 0078 124B     		ldr	r3, .L40+8
 930 007a DB6A     		ldr	r3, [r3, #44]
 337:Core/Src/main.c ****     counter --;
 931              		.loc 1 337 34
 932 007c 0F4A     		ldr	r2, .L40
 933 007e 1288     		ldrh	r2, [r2]
 934 0080 02FB03F3 		mul	r3, r2, r3
 337:Core/Src/main.c ****     counter --;
 935              		.loc 1 337 43
 936 0084 1846     		mov	r0, r3
 937 0086 FFF7FEFF 		bl	__aeabi_ui2d
 938 008a 4FF00002 		mov	r2, #0
 939 008e 0E4B     		ldr	r3, .L40+12
 940 0090 FFF7FEFF 		bl	__aeabi_dmul
 941 0094 0246     		mov	r2, r0
 942 0096 0B46     		mov	r3, r1
 337:Core/Src/main.c ****     counter --;
 943              		.loc 1 337 10
 944 0098 0A4C     		ldr	r4, .L40+8
 337:Core/Src/main.c ****     counter --;
 945              		.loc 1 337 18
 946 009a 1046     		mov	r0, r2
 947 009c 1946     		mov	r1, r3
 948 009e FFF7FEFF 		bl	__aeabi_d2uiz
 949 00a2 0346     		mov	r3, r0
 950 00a4 6363     		str	r3, [r4, #52]
 338:Core/Src/main.c ****   }
 951              		.loc 1 338 13
 952 00a6 054B     		ldr	r3, .L40
 953 00a8 1B88     		ldrh	r3, [r3]
 954 00aa 013B     		subs	r3, r3, #1
 955 00ac 9AB2     		uxth	r2, r3
 956 00ae 034B     		ldr	r3, .L40
 957 00b0 1A80     		strh	r2, [r3]	@ movhi
 958              	.L39:
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 24


 959              		.loc 1 357 1
 960 00b2 00BF     		nop
 961 00b4 0C37     		adds	r7, r7, #12
 962              	.LCFI25:
 963              		.cfi_def_cfa_offset 12
 964 00b6 BD46     		mov	sp, r7
 965              	.LCFI26:
 966              		.cfi_def_cfa_register 13
 967              		@ sp needed
 968 00b8 90BD     		pop	{r4, r7, pc}
 969              	.L41:
 970 00ba 00BF     		.align	2
 971              	.L40:
 972 00bc 00000000 		.word	counter
 973 00c0 00000000 		.word	subida
 974 00c4 00080040 		.word	1073743872
 975 00c8 0000D03F 		.word	1070596096
 976              		.cfi_endproc
 977              	.LFE135:
 979              		.section	.text.Error_Handler,"ax",%progbits
 980              		.align	1
 981              		.global	Error_Handler
 982              		.syntax unified
 983              		.thumb
 984              		.thumb_func
 986              	Error_Handler:
 987              	.LFB136:
 358:Core/Src/main.c **** 
 359:Core/Src/main.c **** /* USER CODE END 4 */
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** /**
 362:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 363:Core/Src/main.c ****   * @retval None
 364:Core/Src/main.c ****   */
 365:Core/Src/main.c **** void Error_Handler(void)
 366:Core/Src/main.c **** {
 988              		.loc 1 366 1
 989              		.cfi_startproc
 990              		@ args = 0, pretend = 0, frame = 0
 991              		@ frame_needed = 1, uses_anonymous_args = 0
 992              		@ link register save eliminated.
 993 0000 80B4     		push	{r7}
 994              	.LCFI27:
 995              		.cfi_def_cfa_offset 4
 996              		.cfi_offset 7, -4
 997 0002 00AF     		add	r7, sp, #0
 998              	.LCFI28:
 999              		.cfi_def_cfa_register 7
 1000              	.LBB10:
 1001              	.LBB11:
 1002              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 25


   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 26


  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 27


 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1003              		.loc 2 142 3
 1004              		.syntax unified
 1005              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1006 0004 72B6     		cpsid i
 1007              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1008              		.loc 2 143 1
 1009              		.thumb
 1010              		.syntax unified
 1011 0006 00BF     		nop
 1012              	.L43:
 1013              	.LBE11:
 1014              	.LBE10:
 367:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 368:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 369:Core/Src/main.c ****   __disable_irq();
 370:Core/Src/main.c ****   while (1)
 1015              		.loc 1 370 9 discriminator 1
 1016 0008 FEE7     		b	.L43
 1017              		.cfi_endproc
 1018              	.LFE136:
 1020              		.text
 1021              	.Letext0:
 1022              		.file 3 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-
 1023              		.file 4 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-
 1024              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1025              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1026              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1027              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1028              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1029              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1030              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1031              		.file 12 "Core/Inc/main.h"
 1032              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1033              		.file 14 "Core/Inc/button.h"
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 28


 1034              		.file 15 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:24     .bss.htim3:00000000 htim3
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:21     .bss.htim3:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:31     .bss.htim4:00000000 htim4
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:28     .bss.htim4:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:38     .bss.counter:00000000 counter
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:35     .bss.counter:00000000 $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:44     .data.subida:00000000 subida
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:52     .text.main:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:58     .text.main:00000000 main
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:202    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:692    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:511    .text.MX_TIM4_Init:00000000 MX_TIM4_Init
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:349    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:188    .text.main:000000e8 $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:196    .text.SystemClock_Config:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:986    .text.Error_Handler:00000000 Error_Handler
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:338    .text.SystemClock_Config:000000c8 $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:344    .text.MX_TIM3_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:500    .text.MX_TIM3_Init:000000dc $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:506    .text.MX_TIM4_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:681    .text.MX_TIM4_Init:000000fc $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:687    .text.MX_GPIO_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:826    .text.MX_GPIO_Init:000000d4 $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:833    .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:839    .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:972    .text.HAL_TIM_PeriodElapsedCallback:000000bc $d
C:\Users\eduap\AppData\Local\Temp\ccIDRMeH.s:980    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dmul
__aeabi_dadd
__aeabi_d2uiz
__aeabi_dsub
HAL_Init
HAL_TIM_Base_Start_IT
HAL_TIM_PWM_Start
button_release
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_IC_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_IC_ConfigChannel
HAL_TIM_PWM_Init
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_GPIO_WritePin
HAL_GPIO_Init
