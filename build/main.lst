ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	hadc1
  20              		.section	.bss.hadc1,"aw",%nobits
  21              		.align	2
  24              	hadc1:
  25 0000 00000000 		.space	72
  25      00000000 
  25      00000000 
  25      00000000 
  25      00000000 
  26              		.global	htim3
  27              		.section	.bss.htim3,"aw",%nobits
  28              		.align	2
  31              	htim3:
  32 0000 00000000 		.space	72
  32      00000000 
  32      00000000 
  32      00000000 
  32      00000000 
  33              		.global	gUSBRxBuffer
  34              		.section	.bss.gUSBRxBuffer,"aw",%nobits
  35              		.align	2
  38              	gUSBRxBuffer:
  39 0000 00000000 		.space	255
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.global	writeBuffer
  41              		.section	.bss.writeBuffer,"aw",%nobits
  42              		.align	2
  45              	writeBuffer:
  46 0000 00000000 		.space	255
  46      00000000 
  46      00000000 
  46      00000000 
  46      00000000 
  47              		.global	readBuffer
  48              		.section	.bss.readBuffer,"aw",%nobits
  49              		.align	2
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 2


  52              	readBuffer:
  53 0000 00000000 		.space	255
  53      00000000 
  53      00000000 
  53      00000000 
  53      00000000 
  54              		.global	read
  55              		.section	.bss.read,"aw",%nobits
  56              		.align	2
  59              	read:
  60 0000 00000000 		.space	8
  60      00000000 
  61              		.global	bitNumber
  62              		.section	.bss.bitNumber,"aw",%nobits
  63              		.align	2
  66              	bitNumber:
  67 0000 00000000 		.space	8
  67      00000000 
  68              		.global	cent
  69              		.section	.bss.cent,"aw",%nobits
  70              		.align	2
  73              	cent:
  74 0000 00000000 		.space	8
  74      00000000 
  75              		.global	test
  76              		.section	.bss.test,"aw",%nobits
  77              		.align	2
  80              	test:
  81 0000 00000000 		.space	8
  81      00000000 
  82              		.global	answer
  83              		.section	.bss.answer,"aw",%nobits
  86              	answer:
  87 0000 00       		.space	1
  88              		.section	.rodata
  89              		.align	2
  90              	.LC0:
  91 0000 53656C65 		.ascii	"Selecione uma funcao: \015 \012\000"
  91      63696F6E 
  91      6520756D 
  91      61206675 
  91      6E63616F 
  92 001a 0000     		.align	2
  93              	.LC1:
  94 001c 4F207065 		.ascii	"O percentual do fundo de escala do A/D eh de %d.%02"
  94      7263656E 
  94      7475616C 
  94      20646F20 
  94      66756E64 
  95 004f 64202525 		.ascii	"d %%, \000"
  95      2C2000
  96 0056 0000     		.align	2
  97              	.LC2:
  98 0058 20726570 		.ascii	" representando uma tensao de %d mV \015 \012\000"
  98      72657365 
  98      6E74616E 
  98      646F2075 
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 3


  98      6D612074 
  99              		.global	__aeabi_ui2d
 100              		.global	__aeabi_dadd
 101              		.global	__aeabi_d2uiz
 102 007f 00       		.align	2
 103              	.LC3:
 104 0080 4F206475 		.ascii	"O duty cycle atual do PWM eh %.2d \015 \012\000"
 104      74792063 
 104      79636C65 
 104      20617475 
 104      616C2064 
 105              		.global	__aeabi_dsub
 106              		.section	.text.main,"ax",%progbits
 107              		.align	1
 108              		.global	main
 109              		.syntax unified
 110              		.thumb
 111              		.thumb_func
 113              	main:
 114              	.LFB220:
 115              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usb_device.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** #include "button.h"
  26:Core/Src/main.c **** #include "usbd_cdc_if.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** /* USER CODE END PD */
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 4


  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** ADC_HandleTypeDef hadc1;
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** TIM_HandleTypeDef htim3;
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE BEGIN PV */
  49:Core/Src/main.c **** uint8_t gUSBRxBuffer[255];
  50:Core/Src/main.c **** /* USER CODE END PV */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  53:Core/Src/main.c **** void SystemClock_Config(void);
  54:Core/Src/main.c **** static void MX_GPIO_Init(void);
  55:Core/Src/main.c **** static void MX_ADC1_Init(void);
  56:Core/Src/main.c **** static void MX_TIM3_Init(void);
  57:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /* USER CODE END PFP */
  60:Core/Src/main.c **** 
  61:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  62:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  63:Core/Src/main.c **** uint8_t writeBuffer[255];
  64:Core/Src/main.c **** uint8_t readBuffer[255];
  65:Core/Src/main.c **** uint32_t read[2];
  66:Core/Src/main.c **** uint32_t bitNumber[2];
  67:Core/Src/main.c **** uint32_t cent[2];
  68:Core/Src/main.c **** uint32_t test[2];
  69:Core/Src/main.c **** uint8_t answer;
  70:Core/Src/main.c **** /* USER CODE END 0 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** /**
  73:Core/Src/main.c ****   * @brief  The application entry point.
  74:Core/Src/main.c ****   * @retval int
  75:Core/Src/main.c ****   */
  76:Core/Src/main.c **** int main(void)
  77:Core/Src/main.c **** {
 116              		.loc 1 77 1
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 8
 119              		@ frame_needed = 1, uses_anonymous_args = 0
 120 0000 90B5     		push	{r4, r7, lr}
 121              	.LCFI0:
 122              		.cfi_def_cfa_offset 12
 123              		.cfi_offset 4, -12
 124              		.cfi_offset 7, -8
 125              		.cfi_offset 14, -4
 126 0002 83B0     		sub	sp, sp, #12
 127              	.LCFI1:
 128              		.cfi_def_cfa_offset 24
 129 0004 00AF     		add	r7, sp, #0
 130              	.LCFI2:
 131              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 5


  78:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  79:Core/Src/main.c ****   bitNumber[0] = 4095;
 132              		.loc 1 79 16
 133 0006 794B     		ldr	r3, .L11
 134 0008 40F6FF72 		movw	r2, #4095
 135 000c 1A60     		str	r2, [r3]
  80:Core/Src/main.c ****   cent[0] = 100;
 136              		.loc 1 80 11
 137 000e 784B     		ldr	r3, .L11+4
 138 0010 6422     		movs	r2, #100
 139 0012 1A60     		str	r2, [r3]
  81:Core/Src/main.c ****   /* USER CODE END 1 */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  86:Core/Src/main.c ****   HAL_Init();
 140              		.loc 1 86 3
 141 0014 FFF7FEFF 		bl	HAL_Init
  87:Core/Src/main.c **** 
  88:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  89:Core/Src/main.c **** 
  90:Core/Src/main.c ****   /* USER CODE END Init */
  91:Core/Src/main.c **** 
  92:Core/Src/main.c ****   /* Configure the system clock */
  93:Core/Src/main.c ****   SystemClock_Config();
 142              		.loc 1 93 3
 143 0018 FFF7FEFF 		bl	SystemClock_Config
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* USER CODE END SysInit */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* Initialize all configured peripherals */
 100:Core/Src/main.c ****   MX_GPIO_Init();
 144              		.loc 1 100 3
 145 001c FFF7FEFF 		bl	MX_GPIO_Init
 101:Core/Src/main.c ****   MX_ADC1_Init();
 146              		.loc 1 101 3
 147 0020 FFF7FEFF 		bl	MX_ADC1_Init
 102:Core/Src/main.c ****   MX_TIM3_Init();
 148              		.loc 1 102 3
 149 0024 FFF7FEFF 		bl	MX_TIM3_Init
 103:Core/Src/main.c ****   MX_USB_DEVICE_Init();
 150              		.loc 1 103 3
 151 0028 FFF7FEFF 		bl	MX_USB_DEVICE_Init
 104:Core/Src/main.c ****   
 105:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 106:Core/Src/main.c ****   HAL_TIM_PWM_Start(&htim3, TIM_CHANNEL_1);
 152              		.loc 1 106 3
 153 002c 0021     		movs	r1, #0
 154 002e 7148     		ldr	r0, .L11+8
 155 0030 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 107:Core/Src/main.c ****   TIM3 -> CCR1 = 0;
 156              		.loc 1 107 8
 157 0034 704B     		ldr	r3, .L11+12
 158              		.loc 1 107 16
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 6


 159 0036 0022     		movs	r2, #0
 160 0038 5A63     		str	r2, [r3, #52]
 161              	.L10:
 108:Core/Src/main.c ****   /* USER CODE END 2 */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Infinite loop */
 111:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 112:Core/Src/main.c ****   while (1)
 113:Core/Src/main.c ****   {
 114:Core/Src/main.c ****     /* USER CODE END WHILE */
 115:Core/Src/main.c ****     
 116:Core/Src/main.c ****     answer = 0;
 162              		.loc 1 116 12
 163 003a 704B     		ldr	r3, .L11+16
 164 003c 0022     		movs	r2, #0
 165 003e 1A70     		strb	r2, [r3]
 117:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 166              		.loc 1 117 5
 167 0040 6F48     		ldr	r0, .L11+20
 168 0042 FFF7FEFF 		bl	HAL_ADC_Start
 118:Core/Src/main.c ****     gUSBRxBuffer[0] = 0;
 169              		.loc 1 118 21
 170 0046 6F4B     		ldr	r3, .L11+24
 171 0048 0022     		movs	r2, #0
 172 004a 1A70     		strb	r2, [r3]
 119:Core/Src/main.c ****     sprintf(writeBuffer, "Selecione uma funcao: \r \n");
 173              		.loc 1 119 5
 174 004c 6E49     		ldr	r1, .L11+28
 175 004e 6F48     		ldr	r0, .L11+32
 176 0050 FFF7FEFF 		bl	sprintf
 120:Core/Src/main.c ****     CDC_Transmit_FS(writeBuffer,strlen(writeBuffer));
 177              		.loc 1 120 33
 178 0054 6D48     		ldr	r0, .L11+32
 179 0056 FFF7FEFF 		bl	strlen
 180 005a 0346     		mov	r3, r0
 181              		.loc 1 120 5
 182 005c 9BB2     		uxth	r3, r3
 183 005e 1946     		mov	r1, r3
 184 0060 6A48     		ldr	r0, .L11+32
 185 0062 FFF7FEFF 		bl	CDC_Transmit_FS
 121:Core/Src/main.c ****     while (answer == 0) {
 186              		.loc 1 121 11
 187 0066 BBE0     		b	.L2
 188              	.L9:
 122:Core/Src/main.c ****         if (gUSBRxBuffer[0] == 112 || gUSBRxBuffer[0] ==  80 || gUSBRxBuffer[0] == 37){
 189              		.loc 1 122 25
 190 0068 664B     		ldr	r3, .L11+24
 191 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 192              		.loc 1 122 12
 193 006c 702B     		cmp	r3, #112
 194 006e 07D0     		beq	.L3
 195              		.loc 1 122 51 discriminator 1
 196 0070 644B     		ldr	r3, .L11+24
 197 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 198              		.loc 1 122 36 discriminator 1
 199 0074 502B     		cmp	r3, #80
 200 0076 03D0     		beq	.L3
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 7


 201              		.loc 1 122 77 discriminator 2
 202 0078 624B     		ldr	r3, .L11+24
 203 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 204              		.loc 1 122 62 discriminator 2
 205 007c 252B     		cmp	r3, #37
 206 007e 58D1     		bne	.L4
 207              	.L3:
 208              	.LBB4:
 123:Core/Src/main.c ****           read[0] = HAL_ADC_GetValue(&hadc1);
 209              		.loc 1 123 21
 210 0080 5F48     		ldr	r0, .L11+20
 211 0082 FFF7FEFF 		bl	HAL_ADC_GetValue
 212 0086 0346     		mov	r3, r0
 213              		.loc 1 123 19
 214 0088 614A     		ldr	r2, .L11+36
 215 008a 1360     		str	r3, [r2]
 124:Core/Src/main.c ****           test[0] = (read[0] * cent[0]) / bitNumber[0];
 216              		.loc 1 124 26
 217 008c 604B     		ldr	r3, .L11+36
 218 008e 1B68     		ldr	r3, [r3]
 219              		.loc 1 124 36
 220 0090 574A     		ldr	r2, .L11+4
 221 0092 1268     		ldr	r2, [r2]
 222              		.loc 1 124 30
 223 0094 03FB02F2 		mul	r2, r3, r2
 224              		.loc 1 124 52
 225 0098 544B     		ldr	r3, .L11
 226 009a 1B68     		ldr	r3, [r3]
 227              		.loc 1 124 41
 228 009c B2FBF3F3 		udiv	r3, r2, r3
 229              		.loc 1 124 19
 230 00a0 5C4A     		ldr	r2, .L11+40
 231 00a2 1360     		str	r3, [r2]
 125:Core/Src/main.c ****           uint32_t integerPart = test[0];
 232              		.loc 1 125 20
 233 00a4 5B4B     		ldr	r3, .L11+40
 234 00a6 1B68     		ldr	r3, [r3]
 235 00a8 7B60     		str	r3, [r7, #4]
 126:Core/Src/main.c ****           uint32_t decimalPart = (((read[0] * 100 * cent[0]) / bitNumber[0]) - integerPart * 100);
 236              		.loc 1 126 41
 237 00aa 594B     		ldr	r3, .L11+36
 238 00ac 1B68     		ldr	r3, [r3]
 239              		.loc 1 126 57
 240 00ae 504A     		ldr	r2, .L11+4
 241 00b0 1268     		ldr	r2, [r2]
 242              		.loc 1 126 51
 243 00b2 02FB03F3 		mul	r3, r2, r3
 244 00b6 6422     		movs	r2, #100
 245 00b8 03FB02F2 		mul	r2, r3, r2
 246              		.loc 1 126 73
 247 00bc 4B4B     		ldr	r3, .L11
 248 00be 1B68     		ldr	r3, [r3]
 249              		.loc 1 126 62
 250 00c0 B2FBF3F2 		udiv	r2, r2, r3
 251              		.loc 1 126 92
 252 00c4 7B68     		ldr	r3, [r7, #4]
 253 00c6 6421     		movs	r1, #100
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 8


 254 00c8 01FB03F3 		mul	r3, r1, r3
 255              		.loc 1 126 20
 256 00cc D31A     		subs	r3, r2, r3
 257 00ce 3B60     		str	r3, [r7]
 127:Core/Src/main.c ****           sprintf(writeBuffer, "O percentual do fundo de escala do A/D eh de %d.%02d %%, ",integerP
 258              		.loc 1 127 11
 259 00d0 3B68     		ldr	r3, [r7]
 260 00d2 7A68     		ldr	r2, [r7, #4]
 261 00d4 5049     		ldr	r1, .L11+44
 262 00d6 4D48     		ldr	r0, .L11+32
 263 00d8 FFF7FEFF 		bl	sprintf
 128:Core/Src/main.c ****           CDC_Transmit_FS(writeBuffer,strlen(writeBuffer));
 264              		.loc 1 128 39
 265 00dc 4B48     		ldr	r0, .L11+32
 266 00de FFF7FEFF 		bl	strlen
 267 00e2 0346     		mov	r3, r0
 268              		.loc 1 128 11
 269 00e4 9BB2     		uxth	r3, r3
 270 00e6 1946     		mov	r1, r3
 271 00e8 4848     		ldr	r0, .L11+32
 272 00ea FFF7FEFF 		bl	CDC_Transmit_FS
 129:Core/Src/main.c ****           HAL_Delay(100);
 273              		.loc 1 129 11
 274 00ee 6420     		movs	r0, #100
 275 00f0 FFF7FEFF 		bl	HAL_Delay
 130:Core/Src/main.c ****           sprintf(writeBuffer, " representando uma tensao de %d mV \r \n",(read[0] * 3300)/4095);
 276              		.loc 1 130 80
 277 00f4 464B     		ldr	r3, .L11+36
 278 00f6 1B68     		ldr	r3, [r3]
 279              		.loc 1 130 84
 280 00f8 40F6E442 		movw	r2, #3300
 281 00fc 03FB02F2 		mul	r2, r3, r2
 282              		.loc 1 130 11
 283 0100 464B     		ldr	r3, .L11+48
 284 0102 A3FB0213 		umull	r1, r3, r3, r2
 285 0106 D21A     		subs	r2, r2, r3
 286 0108 5208     		lsrs	r2, r2, #1
 287 010a 1344     		add	r3, r3, r2
 288 010c DB0A     		lsrs	r3, r3, #11
 289 010e 1A46     		mov	r2, r3
 290 0110 4349     		ldr	r1, .L11+52
 291 0112 3E48     		ldr	r0, .L11+32
 292 0114 FFF7FEFF 		bl	sprintf
 131:Core/Src/main.c ****           CDC_Transmit_FS(writeBuffer,strlen(writeBuffer));
 293              		.loc 1 131 39
 294 0118 3C48     		ldr	r0, .L11+32
 295 011a FFF7FEFF 		bl	strlen
 296 011e 0346     		mov	r3, r0
 297              		.loc 1 131 11
 298 0120 9BB2     		uxth	r3, r3
 299 0122 1946     		mov	r1, r3
 300 0124 3948     		ldr	r0, .L11+32
 301 0126 FFF7FEFF 		bl	CDC_Transmit_FS
 132:Core/Src/main.c ****           answer = 1;
 302              		.loc 1 132 18
 303 012a 344B     		ldr	r3, .L11+16
 304 012c 0122     		movs	r2, #1
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 9


 305 012e 1A70     		strb	r2, [r3]
 306              	.LBE4:
 122:Core/Src/main.c ****           read[0] = HAL_ADC_GetValue(&hadc1);
 307              		.loc 1 122 87
 308 0130 53E0     		b	.L5
 309              	.L4:
 133:Core/Src/main.c ****         }
 134:Core/Src/main.c ****         else if (gUSBRxBuffer[0] == 83 || gUSBRxBuffer[0] == 115){
 310              		.loc 1 134 30
 311 0132 344B     		ldr	r3, .L11+24
 312 0134 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313              		.loc 1 134 17
 314 0136 532B     		cmp	r3, #83
 315 0138 03D0     		beq	.L6
 316              		.loc 1 134 55 discriminator 1
 317 013a 324B     		ldr	r3, .L11+24
 318 013c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 319              		.loc 1 134 40 discriminator 1
 320 013e 732B     		cmp	r3, #115
 321 0140 26D1     		bne	.L7
 322              	.L6:
 135:Core/Src/main.c ****           TIM3 -> CCR1 += 12000 * (6.25/100);
 323              		.loc 1 135 24
 324 0142 2D4B     		ldr	r3, .L11+12
 325 0144 5B6B     		ldr	r3, [r3, #52]
 326 0146 1846     		mov	r0, r3
 327 0148 FFF7FEFF 		bl	__aeabi_ui2d
 328 014c 4FF00002 		mov	r2, #0
 329 0150 344B     		ldr	r3, .L11+56
 330 0152 FFF7FEFF 		bl	__aeabi_dadd
 331 0156 0246     		mov	r2, r0
 332 0158 0B46     		mov	r3, r1
 333 015a 274C     		ldr	r4, .L11+12
 334 015c 1046     		mov	r0, r2
 335 015e 1946     		mov	r1, r3
 336 0160 FFF7FEFF 		bl	__aeabi_d2uiz
 337 0164 0346     		mov	r3, r0
 338 0166 6363     		str	r3, [r4, #52]
 136:Core/Src/main.c ****           sprintf(writeBuffer, "O duty cycle atual do PWM eh %.2d \r \n", TIM3 -> CCR1);
 339              		.loc 1 136 80
 340 0168 234B     		ldr	r3, .L11+12
 341 016a 5B6B     		ldr	r3, [r3, #52]
 342              		.loc 1 136 11
 343 016c 1A46     		mov	r2, r3
 344 016e 2E49     		ldr	r1, .L11+60
 345 0170 2648     		ldr	r0, .L11+32
 346 0172 FFF7FEFF 		bl	sprintf
 137:Core/Src/main.c ****           CDC_Transmit_FS(writeBuffer,strlen(writeBuffer));
 347              		.loc 1 137 39
 348 0176 2548     		ldr	r0, .L11+32
 349 0178 FFF7FEFF 		bl	strlen
 350 017c 0346     		mov	r3, r0
 351              		.loc 1 137 11
 352 017e 9BB2     		uxth	r3, r3
 353 0180 1946     		mov	r1, r3
 354 0182 2248     		ldr	r0, .L11+32
 355 0184 FFF7FEFF 		bl	CDC_Transmit_FS
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 10


 138:Core/Src/main.c ****           answer = 1;
 356              		.loc 1 138 18
 357 0188 1C4B     		ldr	r3, .L11+16
 358 018a 0122     		movs	r2, #1
 359 018c 1A70     		strb	r2, [r3]
 360 018e 24E0     		b	.L5
 361              	.L7:
 139:Core/Src/main.c ****         }
 140:Core/Src/main.c ****           
 141:Core/Src/main.c ****         else if (gUSBRxBuffer[0] == 68 || gUSBRxBuffer[0] == 100){
 362              		.loc 1 141 30
 363 0190 1C4B     		ldr	r3, .L11+24
 364 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 365              		.loc 1 141 17
 366 0194 442B     		cmp	r3, #68
 367 0196 03D0     		beq	.L8
 368              		.loc 1 141 55 discriminator 1
 369 0198 1A4B     		ldr	r3, .L11+24
 370 019a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 371              		.loc 1 141 40 discriminator 1
 372 019c 642B     		cmp	r3, #100
 373 019e 1CD1     		bne	.L5
 374              	.L8:
 142:Core/Src/main.c ****           TIM3 -> CCR1 -= 12000 * (6.25/100);
 375              		.loc 1 142 24
 376 01a0 154B     		ldr	r3, .L11+12
 377 01a2 5B6B     		ldr	r3, [r3, #52]
 378 01a4 1846     		mov	r0, r3
 379 01a6 FFF7FEFF 		bl	__aeabi_ui2d
 380 01aa 4FF00002 		mov	r2, #0
 381 01ae 1D4B     		ldr	r3, .L11+56
 382 01b0 FFF7FEFF 		bl	__aeabi_dsub
 383 01b4 0246     		mov	r2, r0
 384 01b6 0B46     		mov	r3, r1
 385 01b8 0F4C     		ldr	r4, .L11+12
 386 01ba 1046     		mov	r0, r2
 387 01bc 1946     		mov	r1, r3
 388 01be FFF7FEFF 		bl	__aeabi_d2uiz
 389 01c2 0346     		mov	r3, r0
 390 01c4 6363     		str	r3, [r4, #52]
 143:Core/Src/main.c ****           sprintf(writeBuffer, "O duty cycle atual do PWM eh %.2d \r \n", TIM3 -> CCR1);
 391              		.loc 1 143 80
 392 01c6 0C4B     		ldr	r3, .L11+12
 393 01c8 5B6B     		ldr	r3, [r3, #52]
 394              		.loc 1 143 11
 395 01ca 1A46     		mov	r2, r3
 396 01cc 1649     		ldr	r1, .L11+60
 397 01ce 0F48     		ldr	r0, .L11+32
 398 01d0 FFF7FEFF 		bl	sprintf
 144:Core/Src/main.c ****           answer = 1;
 399              		.loc 1 144 18
 400 01d4 094B     		ldr	r3, .L11+16
 401 01d6 0122     		movs	r2, #1
 402 01d8 1A70     		strb	r2, [r3]
 403              	.L5:
 145:Core/Src/main.c ****         }
 146:Core/Src/main.c ****         HAL_Delay(50);
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 11


 404              		.loc 1 146 9
 405 01da 3220     		movs	r0, #50
 406 01dc FFF7FEFF 		bl	HAL_Delay
 407              	.L2:
 121:Core/Src/main.c ****         if (gUSBRxBuffer[0] == 112 || gUSBRxBuffer[0] ==  80 || gUSBRxBuffer[0] == 37){
 408              		.loc 1 121 19
 409 01e0 064B     		ldr	r3, .L11+16
 410 01e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 411 01e4 002B     		cmp	r3, #0
 412 01e6 3FF43FAF 		beq	.L9
 116:Core/Src/main.c ****     HAL_ADC_Start(&hadc1);
 413              		.loc 1 116 12
 414 01ea 26E7     		b	.L10
 415              	.L12:
 416              		.align	2
 417              	.L11:
 418 01ec 00000000 		.word	bitNumber
 419 01f0 00000000 		.word	cent
 420 01f4 00000000 		.word	htim3
 421 01f8 00040040 		.word	1073742848
 422 01fc 00000000 		.word	answer
 423 0200 00000000 		.word	hadc1
 424 0204 00000000 		.word	gUSBRxBuffer
 425 0208 00000000 		.word	.LC0
 426 020c 00000000 		.word	writeBuffer
 427 0210 00000000 		.word	read
 428 0214 00000000 		.word	test
 429 0218 1C000000 		.word	.LC1
 430 021c 01011000 		.word	1048833
 431 0220 58000000 		.word	.LC2
 432 0224 00708740 		.word	1082617856
 433 0228 80000000 		.word	.LC3
 434              		.cfi_endproc
 435              	.LFE220:
 437              		.section	.text.SystemClock_Config,"ax",%progbits
 438              		.align	1
 439              		.global	SystemClock_Config
 440              		.syntax unified
 441              		.thumb
 442              		.thumb_func
 444              	SystemClock_Config:
 445              	.LFB221:
 147:Core/Src/main.c ****       }
 148:Core/Src/main.c ****     }
 149:Core/Src/main.c **** }
 150:Core/Src/main.c ****     
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     // sprintf()
 153:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 154:Core/Src/main.c ****   /* USER CODE END 3 */
 155:Core/Src/main.c **** 
 156:Core/Src/main.c **** 
 157:Core/Src/main.c **** /**
 158:Core/Src/main.c ****   * @brief System Clock Configuration
 159:Core/Src/main.c ****   * @retval None
 160:Core/Src/main.c ****   */
 161:Core/Src/main.c **** void SystemClock_Config(void)
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 12


 162:Core/Src/main.c **** {
 446              		.loc 1 162 1
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 80
 449              		@ frame_needed = 1, uses_anonymous_args = 0
 450 0000 80B5     		push	{r7, lr}
 451              	.LCFI3:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 94B0     		sub	sp, sp, #80
 456              	.LCFI4:
 457              		.cfi_def_cfa_offset 88
 458 0004 00AF     		add	r7, sp, #0
 459              	.LCFI5:
 460              		.cfi_def_cfa_register 7
 163:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 461              		.loc 1 163 22
 462 0006 07F12003 		add	r3, r7, #32
 463 000a 3022     		movs	r2, #48
 464 000c 0021     		movs	r1, #0
 465 000e 1846     		mov	r0, r3
 466 0010 FFF7FEFF 		bl	memset
 164:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 467              		.loc 1 164 22
 468 0014 07F10C03 		add	r3, r7, #12
 469 0018 0022     		movs	r2, #0
 470 001a 1A60     		str	r2, [r3]
 471 001c 5A60     		str	r2, [r3, #4]
 472 001e 9A60     		str	r2, [r3, #8]
 473 0020 DA60     		str	r2, [r3, #12]
 474 0022 1A61     		str	r2, [r3, #16]
 475              	.LBB5:
 165:Core/Src/main.c **** 
 166:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 167:Core/Src/main.c ****   */
 168:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 476              		.loc 1 168 3
 477 0024 0023     		movs	r3, #0
 478 0026 BB60     		str	r3, [r7, #8]
 479 0028 274B     		ldr	r3, .L17
 480 002a 1B6C     		ldr	r3, [r3, #64]
 481 002c 264A     		ldr	r2, .L17
 482 002e 43F08053 		orr	r3, r3, #268435456
 483 0032 1364     		str	r3, [r2, #64]
 484 0034 244B     		ldr	r3, .L17
 485 0036 1B6C     		ldr	r3, [r3, #64]
 486 0038 03F08053 		and	r3, r3, #268435456
 487 003c BB60     		str	r3, [r7, #8]
 488 003e BB68     		ldr	r3, [r7, #8]
 489              	.LBE5:
 490              	.LBB6:
 169:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 491              		.loc 1 169 3
 492 0040 0023     		movs	r3, #0
 493 0042 7B60     		str	r3, [r7, #4]
 494 0044 214B     		ldr	r3, .L17+4
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 13


 495 0046 1B68     		ldr	r3, [r3]
 496 0048 204A     		ldr	r2, .L17+4
 497 004a 43F44043 		orr	r3, r3, #49152
 498 004e 1360     		str	r3, [r2]
 499 0050 1E4B     		ldr	r3, .L17+4
 500 0052 1B68     		ldr	r3, [r3]
 501 0054 03F44043 		and	r3, r3, #49152
 502 0058 7B60     		str	r3, [r7, #4]
 503 005a 7B68     		ldr	r3, [r7, #4]
 504              	.LBE6:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 172:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 173:Core/Src/main.c ****   */
 174:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 505              		.loc 1 174 36
 506 005c 0123     		movs	r3, #1
 507 005e 3B62     		str	r3, [r7, #32]
 175:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 508              		.loc 1 175 30
 509 0060 4FF48033 		mov	r3, #65536
 510 0064 7B62     		str	r3, [r7, #36]
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 511              		.loc 1 176 34
 512 0066 0223     		movs	r3, #2
 513 0068 BB63     		str	r3, [r7, #56]
 177:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 514              		.loc 1 177 35
 515 006a 4FF48003 		mov	r3, #4194304
 516 006e FB63     		str	r3, [r7, #60]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 517              		.loc 1 178 30
 518 0070 1923     		movs	r3, #25
 519 0072 3B64     		str	r3, [r7, #64]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 520              		.loc 1 179 30
 521 0074 C023     		movs	r3, #192
 522 0076 7B64     		str	r3, [r7, #68]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 523              		.loc 1 180 30
 524 0078 0223     		movs	r3, #2
 525 007a BB64     		str	r3, [r7, #72]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 526              		.loc 1 181 30
 527 007c 0423     		movs	r3, #4
 528 007e FB64     		str	r3, [r7, #76]
 182:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 529              		.loc 1 182 7
 530 0080 07F12003 		add	r3, r7, #32
 531 0084 1846     		mov	r0, r3
 532 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 533 008a 0346     		mov	r3, r0
 534              		.loc 1 182 6
 535 008c 002B     		cmp	r3, #0
 536 008e 01D0     		beq	.L14
 183:Core/Src/main.c ****   {
 184:Core/Src/main.c ****     Error_Handler();
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 14


 537              		.loc 1 184 5
 538 0090 FFF7FEFF 		bl	Error_Handler
 539              	.L14:
 185:Core/Src/main.c ****   }
 186:Core/Src/main.c **** 
 187:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 540              		.loc 1 189 31
 541 0094 0F23     		movs	r3, #15
 542 0096 FB60     		str	r3, [r7, #12]
 190:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 543              		.loc 1 191 34
 544 0098 0223     		movs	r3, #2
 545 009a 3B61     		str	r3, [r7, #16]
 192:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 546              		.loc 1 192 35
 547 009c 0023     		movs	r3, #0
 548 009e 7B61     		str	r3, [r7, #20]
 193:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 549              		.loc 1 193 36
 550 00a0 4FF48053 		mov	r3, #4096
 551 00a4 BB61     		str	r3, [r7, #24]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 552              		.loc 1 194 36
 553 00a6 0023     		movs	r3, #0
 554 00a8 FB61     		str	r3, [r7, #28]
 195:Core/Src/main.c **** 
 196:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 555              		.loc 1 196 7
 556 00aa 07F10C03 		add	r3, r7, #12
 557 00ae 0321     		movs	r1, #3
 558 00b0 1846     		mov	r0, r3
 559 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 560 00b6 0346     		mov	r3, r0
 561              		.loc 1 196 6
 562 00b8 002B     		cmp	r3, #0
 563 00ba 01D0     		beq	.L16
 197:Core/Src/main.c ****   {
 198:Core/Src/main.c ****     Error_Handler();
 564              		.loc 1 198 5
 565 00bc FFF7FEFF 		bl	Error_Handler
 566              	.L16:
 199:Core/Src/main.c ****   }
 200:Core/Src/main.c **** }
 567              		.loc 1 200 1
 568 00c0 00BF     		nop
 569 00c2 5037     		adds	r7, r7, #80
 570              	.LCFI6:
 571              		.cfi_def_cfa_offset 8
 572 00c4 BD46     		mov	sp, r7
 573              	.LCFI7:
 574              		.cfi_def_cfa_register 13
 575              		@ sp needed
 576 00c6 80BD     		pop	{r7, pc}
 577              	.L18:
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 15


 578              		.align	2
 579              	.L17:
 580 00c8 00380240 		.word	1073887232
 581 00cc 00700040 		.word	1073770496
 582              		.cfi_endproc
 583              	.LFE221:
 585              		.section	.text.MX_ADC1_Init,"ax",%progbits
 586              		.align	1
 587              		.syntax unified
 588              		.thumb
 589              		.thumb_func
 591              	MX_ADC1_Init:
 592              	.LFB222:
 201:Core/Src/main.c **** 
 202:Core/Src/main.c **** /**
 203:Core/Src/main.c ****   * @brief ADC1 Initialization Function
 204:Core/Src/main.c ****   * @param None
 205:Core/Src/main.c ****   * @retval None
 206:Core/Src/main.c ****   */
 207:Core/Src/main.c **** static void MX_ADC1_Init(void)
 208:Core/Src/main.c **** {
 593              		.loc 1 208 1
 594              		.cfi_startproc
 595              		@ args = 0, pretend = 0, frame = 16
 596              		@ frame_needed = 1, uses_anonymous_args = 0
 597 0000 80B5     		push	{r7, lr}
 598              	.LCFI8:
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 84B0     		sub	sp, sp, #16
 603              	.LCFI9:
 604              		.cfi_def_cfa_offset 24
 605 0004 00AF     		add	r7, sp, #0
 606              	.LCFI10:
 607              		.cfi_def_cfa_register 7
 209:Core/Src/main.c **** 
 210:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 0 */
 211:Core/Src/main.c **** 
 212:Core/Src/main.c ****   /* USER CODE END ADC1_Init 0 */
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   ADC_ChannelConfTypeDef sConfig = {0};
 608              		.loc 1 214 26
 609 0006 3B46     		mov	r3, r7
 610 0008 0022     		movs	r2, #0
 611 000a 1A60     		str	r2, [r3]
 612 000c 5A60     		str	r2, [r3, #4]
 613 000e 9A60     		str	r2, [r3, #8]
 614 0010 DA60     		str	r2, [r3, #12]
 215:Core/Src/main.c **** 
 216:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 1 */
 217:Core/Src/main.c **** 
 218:Core/Src/main.c ****   /* USER CODE END ADC1_Init 1 */
 219:Core/Src/main.c **** 
 220:Core/Src/main.c ****   /** Configure the global features of the ADC (Clock, Resolution, Data Alignment and number of con
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c ****   hadc1.Instance = ADC1;
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 16


 615              		.loc 1 222 18
 616 0012 214B     		ldr	r3, .L23
 617 0014 214A     		ldr	r2, .L23+4
 618 0016 1A60     		str	r2, [r3]
 223:Core/Src/main.c ****   hadc1.Init.ClockPrescaler = ADC_CLOCK_SYNC_PCLK_DIV4;
 619              		.loc 1 223 29
 620 0018 1F4B     		ldr	r3, .L23
 621 001a 4FF48032 		mov	r2, #65536
 622 001e 5A60     		str	r2, [r3, #4]
 224:Core/Src/main.c ****   hadc1.Init.Resolution = ADC_RESOLUTION_12B;
 623              		.loc 1 224 25
 624 0020 1D4B     		ldr	r3, .L23
 625 0022 0022     		movs	r2, #0
 626 0024 9A60     		str	r2, [r3, #8]
 225:Core/Src/main.c ****   hadc1.Init.ScanConvMode = DISABLE;
 627              		.loc 1 225 27
 628 0026 1C4B     		ldr	r3, .L23
 629 0028 0022     		movs	r2, #0
 630 002a 1A61     		str	r2, [r3, #16]
 226:Core/Src/main.c ****   hadc1.Init.ContinuousConvMode = DISABLE;
 631              		.loc 1 226 33
 632 002c 1A4B     		ldr	r3, .L23
 633 002e 0022     		movs	r2, #0
 634 0030 1A76     		strb	r2, [r3, #24]
 227:Core/Src/main.c ****   hadc1.Init.DiscontinuousConvMode = DISABLE;
 635              		.loc 1 227 36
 636 0032 194B     		ldr	r3, .L23
 637 0034 0022     		movs	r2, #0
 638 0036 83F82020 		strb	r2, [r3, #32]
 228:Core/Src/main.c ****   hadc1.Init.ExternalTrigConvEdge = ADC_EXTERNALTRIGCONVEDGE_NONE;
 639              		.loc 1 228 35
 640 003a 174B     		ldr	r3, .L23
 641 003c 0022     		movs	r2, #0
 642 003e DA62     		str	r2, [r3, #44]
 229:Core/Src/main.c ****   hadc1.Init.ExternalTrigConv = ADC_SOFTWARE_START;
 643              		.loc 1 229 31
 644 0040 154B     		ldr	r3, .L23
 645 0042 174A     		ldr	r2, .L23+8
 646 0044 9A62     		str	r2, [r3, #40]
 230:Core/Src/main.c ****   hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
 647              		.loc 1 230 24
 648 0046 144B     		ldr	r3, .L23
 649 0048 0022     		movs	r2, #0
 650 004a DA60     		str	r2, [r3, #12]
 231:Core/Src/main.c ****   hadc1.Init.NbrOfConversion = 1;
 651              		.loc 1 231 30
 652 004c 124B     		ldr	r3, .L23
 653 004e 0122     		movs	r2, #1
 654 0050 DA61     		str	r2, [r3, #28]
 232:Core/Src/main.c ****   hadc1.Init.DMAContinuousRequests = DISABLE;
 655              		.loc 1 232 36
 656 0052 114B     		ldr	r3, .L23
 657 0054 0022     		movs	r2, #0
 658 0056 83F83020 		strb	r2, [r3, #48]
 233:Core/Src/main.c ****   hadc1.Init.EOCSelection = ADC_EOC_SINGLE_CONV;
 659              		.loc 1 233 27
 660 005a 0F4B     		ldr	r3, .L23
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 17


 661 005c 0122     		movs	r2, #1
 662 005e 5A61     		str	r2, [r3, #20]
 234:Core/Src/main.c ****   if (HAL_ADC_Init(&hadc1) != HAL_OK)
 663              		.loc 1 234 7
 664 0060 0D48     		ldr	r0, .L23
 665 0062 FFF7FEFF 		bl	HAL_ADC_Init
 666 0066 0346     		mov	r3, r0
 667              		.loc 1 234 6
 668 0068 002B     		cmp	r3, #0
 669 006a 01D0     		beq	.L20
 235:Core/Src/main.c ****   {
 236:Core/Src/main.c ****     Error_Handler();
 670              		.loc 1 236 5
 671 006c FFF7FEFF 		bl	Error_Handler
 672              	.L20:
 237:Core/Src/main.c ****   }
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /** Configure for the selected ADC regular channel its corresponding rank in the sequencer and it
 240:Core/Src/main.c ****   */
 241:Core/Src/main.c ****   sConfig.Channel = ADC_CHANNEL_0;
 673              		.loc 1 241 19
 674 0070 0023     		movs	r3, #0
 675 0072 3B60     		str	r3, [r7]
 242:Core/Src/main.c ****   sConfig.Rank = 1;
 676              		.loc 1 242 16
 677 0074 0123     		movs	r3, #1
 678 0076 7B60     		str	r3, [r7, #4]
 243:Core/Src/main.c ****   sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;
 679              		.loc 1 243 24
 680 0078 0023     		movs	r3, #0
 681 007a BB60     		str	r3, [r7, #8]
 244:Core/Src/main.c ****   if (HAL_ADC_ConfigChannel(&hadc1, &sConfig) != HAL_OK)
 682              		.loc 1 244 7
 683 007c 3B46     		mov	r3, r7
 684 007e 1946     		mov	r1, r3
 685 0080 0548     		ldr	r0, .L23
 686 0082 FFF7FEFF 		bl	HAL_ADC_ConfigChannel
 687 0086 0346     		mov	r3, r0
 688              		.loc 1 244 6
 689 0088 002B     		cmp	r3, #0
 690 008a 01D0     		beq	.L22
 245:Core/Src/main.c ****   {
 246:Core/Src/main.c ****     Error_Handler();
 691              		.loc 1 246 5
 692 008c FFF7FEFF 		bl	Error_Handler
 693              	.L22:
 247:Core/Src/main.c ****   }
 248:Core/Src/main.c ****   /* USER CODE BEGIN ADC1_Init 2 */
 249:Core/Src/main.c **** 
 250:Core/Src/main.c ****   /* USER CODE END ADC1_Init 2 */
 251:Core/Src/main.c **** 
 252:Core/Src/main.c **** }
 694              		.loc 1 252 1
 695 0090 00BF     		nop
 696 0092 1037     		adds	r7, r7, #16
 697              	.LCFI11:
 698              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 18


 699 0094 BD46     		mov	sp, r7
 700              	.LCFI12:
 701              		.cfi_def_cfa_register 13
 702              		@ sp needed
 703 0096 80BD     		pop	{r7, pc}
 704              	.L24:
 705              		.align	2
 706              	.L23:
 707 0098 00000000 		.word	hadc1
 708 009c 00200140 		.word	1073815552
 709 00a0 0100000F 		.word	251658241
 710              		.cfi_endproc
 711              	.LFE222:
 713              		.section	.text.MX_TIM3_Init,"ax",%progbits
 714              		.align	1
 715              		.syntax unified
 716              		.thumb
 717              		.thumb_func
 719              	MX_TIM3_Init:
 720              	.LFB223:
 253:Core/Src/main.c **** 
 254:Core/Src/main.c **** /**
 255:Core/Src/main.c ****   * @brief TIM3 Initialization Function
 256:Core/Src/main.c ****   * @param None
 257:Core/Src/main.c ****   * @retval None
 258:Core/Src/main.c ****   */
 259:Core/Src/main.c **** static void MX_TIM3_Init(void)
 260:Core/Src/main.c **** {
 721              		.loc 1 260 1
 722              		.cfi_startproc
 723              		@ args = 0, pretend = 0, frame = 56
 724              		@ frame_needed = 1, uses_anonymous_args = 0
 725 0000 80B5     		push	{r7, lr}
 726              	.LCFI13:
 727              		.cfi_def_cfa_offset 8
 728              		.cfi_offset 7, -8
 729              		.cfi_offset 14, -4
 730 0002 8EB0     		sub	sp, sp, #56
 731              	.LCFI14:
 732              		.cfi_def_cfa_offset 64
 733 0004 00AF     		add	r7, sp, #0
 734              	.LCFI15:
 735              		.cfi_def_cfa_register 7
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 0 */
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   /* USER CODE END TIM3_Init 0 */
 265:Core/Src/main.c **** 
 266:Core/Src/main.c ****   TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 736              		.loc 1 266 26
 737 0006 07F12803 		add	r3, r7, #40
 738 000a 0022     		movs	r2, #0
 739 000c 1A60     		str	r2, [r3]
 740 000e 5A60     		str	r2, [r3, #4]
 741 0010 9A60     		str	r2, [r3, #8]
 742 0012 DA60     		str	r2, [r3, #12]
 267:Core/Src/main.c ****   TIM_MasterConfigTypeDef sMasterConfig = {0};
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 19


 743              		.loc 1 267 27
 744 0014 07F12003 		add	r3, r7, #32
 745 0018 0022     		movs	r2, #0
 746 001a 1A60     		str	r2, [r3]
 747 001c 5A60     		str	r2, [r3, #4]
 268:Core/Src/main.c ****   TIM_OC_InitTypeDef sConfigOC = {0};
 748              		.loc 1 268 22
 749 001e 3B1D     		adds	r3, r7, #4
 750 0020 0022     		movs	r2, #0
 751 0022 1A60     		str	r2, [r3]
 752 0024 5A60     		str	r2, [r3, #4]
 753 0026 9A60     		str	r2, [r3, #8]
 754 0028 DA60     		str	r2, [r3, #12]
 755 002a 1A61     		str	r2, [r3, #16]
 756 002c 5A61     		str	r2, [r3, #20]
 757 002e 9A61     		str	r2, [r3, #24]
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 1 */
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   /* USER CODE END TIM3_Init 1 */
 273:Core/Src/main.c ****   htim3.Instance = TIM3;
 758              		.loc 1 273 18
 759 0030 2D4B     		ldr	r3, .L31
 760 0032 2E4A     		ldr	r2, .L31+4
 761 0034 1A60     		str	r2, [r3]
 274:Core/Src/main.c ****   htim3.Init.Prescaler = 1;
 762              		.loc 1 274 24
 763 0036 2C4B     		ldr	r3, .L31
 764 0038 0122     		movs	r2, #1
 765 003a 5A60     		str	r2, [r3, #4]
 275:Core/Src/main.c ****   htim3.Init.CounterMode = TIM_COUNTERMODE_UP;
 766              		.loc 1 275 26
 767 003c 2A4B     		ldr	r3, .L31
 768 003e 0022     		movs	r2, #0
 769 0040 9A60     		str	r2, [r3, #8]
 276:Core/Src/main.c ****   htim3.Init.Period = 12000;
 770              		.loc 1 276 21
 771 0042 294B     		ldr	r3, .L31
 772 0044 42F6E062 		movw	r2, #12000
 773 0048 DA60     		str	r2, [r3, #12]
 277:Core/Src/main.c ****   htim3.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 774              		.loc 1 277 28
 775 004a 274B     		ldr	r3, .L31
 776 004c 0022     		movs	r2, #0
 777 004e 1A61     		str	r2, [r3, #16]
 278:Core/Src/main.c ****   htim3.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 778              		.loc 1 278 32
 779 0050 254B     		ldr	r3, .L31
 780 0052 0022     		movs	r2, #0
 781 0054 9A61     		str	r2, [r3, #24]
 279:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim3) != HAL_OK)
 782              		.loc 1 279 7
 783 0056 2448     		ldr	r0, .L31
 784 0058 FFF7FEFF 		bl	HAL_TIM_Base_Init
 785 005c 0346     		mov	r3, r0
 786              		.loc 1 279 6
 787 005e 002B     		cmp	r3, #0
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 20


 788 0060 01D0     		beq	.L26
 280:Core/Src/main.c ****   {
 281:Core/Src/main.c ****     Error_Handler();
 789              		.loc 1 281 5
 790 0062 FFF7FEFF 		bl	Error_Handler
 791              	.L26:
 282:Core/Src/main.c ****   }
 283:Core/Src/main.c ****   sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 792              		.loc 1 283 34
 793 0066 4FF48053 		mov	r3, #4096
 794 006a BB62     		str	r3, [r7, #40]
 284:Core/Src/main.c ****   if (HAL_TIM_ConfigClockSource(&htim3, &sClockSourceConfig) != HAL_OK)
 795              		.loc 1 284 7
 796 006c 07F12803 		add	r3, r7, #40
 797 0070 1946     		mov	r1, r3
 798 0072 1D48     		ldr	r0, .L31
 799 0074 FFF7FEFF 		bl	HAL_TIM_ConfigClockSource
 800 0078 0346     		mov	r3, r0
 801              		.loc 1 284 6
 802 007a 002B     		cmp	r3, #0
 803 007c 01D0     		beq	.L27
 285:Core/Src/main.c ****   {
 286:Core/Src/main.c ****     Error_Handler();
 804              		.loc 1 286 5
 805 007e FFF7FEFF 		bl	Error_Handler
 806              	.L27:
 287:Core/Src/main.c ****   }
 288:Core/Src/main.c ****   if (HAL_TIM_PWM_Init(&htim3) != HAL_OK)
 807              		.loc 1 288 7
 808 0082 1948     		ldr	r0, .L31
 809 0084 FFF7FEFF 		bl	HAL_TIM_PWM_Init
 810 0088 0346     		mov	r3, r0
 811              		.loc 1 288 6
 812 008a 002B     		cmp	r3, #0
 813 008c 01D0     		beq	.L28
 289:Core/Src/main.c ****   {
 290:Core/Src/main.c ****     Error_Handler();
 814              		.loc 1 290 5
 815 008e FFF7FEFF 		bl	Error_Handler
 816              	.L28:
 291:Core/Src/main.c ****   }
 292:Core/Src/main.c ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 817              		.loc 1 292 37
 818 0092 0023     		movs	r3, #0
 819 0094 3B62     		str	r3, [r7, #32]
 293:Core/Src/main.c ****   sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 820              		.loc 1 293 33
 821 0096 0023     		movs	r3, #0
 822 0098 7B62     		str	r3, [r7, #36]
 294:Core/Src/main.c ****   if (HAL_TIMEx_MasterConfigSynchronization(&htim3, &sMasterConfig) != HAL_OK)
 823              		.loc 1 294 7
 824 009a 07F12003 		add	r3, r7, #32
 825 009e 1946     		mov	r1, r3
 826 00a0 1148     		ldr	r0, .L31
 827 00a2 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 828 00a6 0346     		mov	r3, r0
 829              		.loc 1 294 6
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 21


 830 00a8 002B     		cmp	r3, #0
 831 00aa 01D0     		beq	.L29
 295:Core/Src/main.c ****   {
 296:Core/Src/main.c ****     Error_Handler();
 832              		.loc 1 296 5
 833 00ac FFF7FEFF 		bl	Error_Handler
 834              	.L29:
 297:Core/Src/main.c ****   }
 298:Core/Src/main.c ****   sConfigOC.OCMode = TIM_OCMODE_PWM1;
 835              		.loc 1 298 20
 836 00b0 6023     		movs	r3, #96
 837 00b2 7B60     		str	r3, [r7, #4]
 299:Core/Src/main.c ****   sConfigOC.Pulse = 6000;
 838              		.loc 1 299 19
 839 00b4 41F27073 		movw	r3, #6000
 840 00b8 BB60     		str	r3, [r7, #8]
 300:Core/Src/main.c ****   sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 841              		.loc 1 300 24
 842 00ba 0023     		movs	r3, #0
 843 00bc FB60     		str	r3, [r7, #12]
 301:Core/Src/main.c ****   sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 844              		.loc 1 301 24
 845 00be 0023     		movs	r3, #0
 846 00c0 7B61     		str	r3, [r7, #20]
 302:Core/Src/main.c ****   if (HAL_TIM_PWM_ConfigChannel(&htim3, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 847              		.loc 1 302 7
 848 00c2 3B1D     		adds	r3, r7, #4
 849 00c4 0022     		movs	r2, #0
 850 00c6 1946     		mov	r1, r3
 851 00c8 0748     		ldr	r0, .L31
 852 00ca FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 853 00ce 0346     		mov	r3, r0
 854              		.loc 1 302 6
 855 00d0 002B     		cmp	r3, #0
 856 00d2 01D0     		beq	.L30
 303:Core/Src/main.c ****   {
 304:Core/Src/main.c ****     Error_Handler();
 857              		.loc 1 304 5
 858 00d4 FFF7FEFF 		bl	Error_Handler
 859              	.L30:
 305:Core/Src/main.c ****   }
 306:Core/Src/main.c ****   /* USER CODE BEGIN TIM3_Init 2 */
 307:Core/Src/main.c **** 
 308:Core/Src/main.c ****   /* USER CODE END TIM3_Init 2 */
 309:Core/Src/main.c ****   HAL_TIM_MspPostInit(&htim3);
 860              		.loc 1 309 3
 861 00d8 0348     		ldr	r0, .L31
 862 00da FFF7FEFF 		bl	HAL_TIM_MspPostInit
 310:Core/Src/main.c **** 
 311:Core/Src/main.c **** }
 863              		.loc 1 311 1
 864 00de 00BF     		nop
 865 00e0 3837     		adds	r7, r7, #56
 866              	.LCFI16:
 867              		.cfi_def_cfa_offset 8
 868 00e2 BD46     		mov	sp, r7
 869              	.LCFI17:
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 22


 870              		.cfi_def_cfa_register 13
 871              		@ sp needed
 872 00e4 80BD     		pop	{r7, pc}
 873              	.L32:
 874 00e6 00BF     		.align	2
 875              	.L31:
 876 00e8 00000000 		.word	htim3
 877 00ec 00040040 		.word	1073742848
 878              		.cfi_endproc
 879              	.LFE223:
 881              		.section	.text.MX_GPIO_Init,"ax",%progbits
 882              		.align	1
 883              		.syntax unified
 884              		.thumb
 885              		.thumb_func
 887              	MX_GPIO_Init:
 888              	.LFB224:
 312:Core/Src/main.c **** 
 313:Core/Src/main.c **** /**
 314:Core/Src/main.c ****   * @brief GPIO Initialization Function
 315:Core/Src/main.c ****   * @param None
 316:Core/Src/main.c ****   * @retval None
 317:Core/Src/main.c ****   */
 318:Core/Src/main.c **** static void MX_GPIO_Init(void)
 319:Core/Src/main.c **** {
 889              		.loc 1 319 1
 890              		.cfi_startproc
 891              		@ args = 0, pretend = 0, frame = 40
 892              		@ frame_needed = 1, uses_anonymous_args = 0
 893 0000 80B5     		push	{r7, lr}
 894              	.LCFI18:
 895              		.cfi_def_cfa_offset 8
 896              		.cfi_offset 7, -8
 897              		.cfi_offset 14, -4
 898 0002 8AB0     		sub	sp, sp, #40
 899              	.LCFI19:
 900              		.cfi_def_cfa_offset 48
 901 0004 00AF     		add	r7, sp, #0
 902              	.LCFI20:
 903              		.cfi_def_cfa_register 7
 320:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 904              		.loc 1 320 20
 905 0006 07F11403 		add	r3, r7, #20
 906 000a 0022     		movs	r2, #0
 907 000c 1A60     		str	r2, [r3]
 908 000e 5A60     		str	r2, [r3, #4]
 909 0010 9A60     		str	r2, [r3, #8]
 910 0012 DA60     		str	r2, [r3, #12]
 911 0014 1A61     		str	r2, [r3, #16]
 912              	.LBB7:
 321:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 322:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 323:Core/Src/main.c **** 
 324:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 325:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 913              		.loc 1 325 3
 914 0016 0023     		movs	r3, #0
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 23


 915 0018 3B61     		str	r3, [r7, #16]
 916 001a 274B     		ldr	r3, .L34
 917 001c 1B6B     		ldr	r3, [r3, #48]
 918 001e 264A     		ldr	r2, .L34
 919 0020 43F00403 		orr	r3, r3, #4
 920 0024 1363     		str	r3, [r2, #48]
 921 0026 244B     		ldr	r3, .L34
 922 0028 1B6B     		ldr	r3, [r3, #48]
 923 002a 03F00403 		and	r3, r3, #4
 924 002e 3B61     		str	r3, [r7, #16]
 925 0030 3B69     		ldr	r3, [r7, #16]
 926              	.LBE7:
 927              	.LBB8:
 326:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 928              		.loc 1 326 3
 929 0032 0023     		movs	r3, #0
 930 0034 FB60     		str	r3, [r7, #12]
 931 0036 204B     		ldr	r3, .L34
 932 0038 1B6B     		ldr	r3, [r3, #48]
 933 003a 1F4A     		ldr	r2, .L34
 934 003c 43F08003 		orr	r3, r3, #128
 935 0040 1363     		str	r3, [r2, #48]
 936 0042 1D4B     		ldr	r3, .L34
 937 0044 1B6B     		ldr	r3, [r3, #48]
 938 0046 03F08003 		and	r3, r3, #128
 939 004a FB60     		str	r3, [r7, #12]
 940 004c FB68     		ldr	r3, [r7, #12]
 941              	.LBE8:
 942              	.LBB9:
 327:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 943              		.loc 1 327 3
 944 004e 0023     		movs	r3, #0
 945 0050 BB60     		str	r3, [r7, #8]
 946 0052 194B     		ldr	r3, .L34
 947 0054 1B6B     		ldr	r3, [r3, #48]
 948 0056 184A     		ldr	r2, .L34
 949 0058 43F00103 		orr	r3, r3, #1
 950 005c 1363     		str	r3, [r2, #48]
 951 005e 164B     		ldr	r3, .L34
 952 0060 1B6B     		ldr	r3, [r3, #48]
 953 0062 03F00103 		and	r3, r3, #1
 954 0066 BB60     		str	r3, [r7, #8]
 955 0068 BB68     		ldr	r3, [r7, #8]
 956              	.LBE9:
 957              	.LBB10:
 328:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 958              		.loc 1 328 3
 959 006a 0023     		movs	r3, #0
 960 006c 7B60     		str	r3, [r7, #4]
 961 006e 124B     		ldr	r3, .L34
 962 0070 1B6B     		ldr	r3, [r3, #48]
 963 0072 114A     		ldr	r2, .L34
 964 0074 43F00203 		orr	r3, r3, #2
 965 0078 1363     		str	r3, [r2, #48]
 966 007a 0F4B     		ldr	r3, .L34
 967 007c 1B6B     		ldr	r3, [r3, #48]
 968 007e 03F00203 		and	r3, r3, #2
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 24


 969 0082 7B60     		str	r3, [r7, #4]
 970 0084 7B68     		ldr	r3, [r7, #4]
 971              	.LBE10:
 329:Core/Src/main.c **** 
 330:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 331:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 972              		.loc 1 331 3
 973 0086 0022     		movs	r2, #0
 974 0088 4FF40051 		mov	r1, #8192
 975 008c 0B48     		ldr	r0, .L34+4
 976 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 334:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 977              		.loc 1 334 23
 978 0092 4FF40053 		mov	r3, #8192
 979 0096 7B61     		str	r3, [r7, #20]
 335:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 980              		.loc 1 335 24
 981 0098 0123     		movs	r3, #1
 982 009a BB61     		str	r3, [r7, #24]
 336:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 983              		.loc 1 336 24
 984 009c 0023     		movs	r3, #0
 985 009e FB61     		str	r3, [r7, #28]
 337:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 986              		.loc 1 337 25
 987 00a0 0023     		movs	r3, #0
 988 00a2 3B62     		str	r3, [r7, #32]
 338:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 989              		.loc 1 338 3
 990 00a4 07F11403 		add	r3, r7, #20
 991 00a8 1946     		mov	r1, r3
 992 00aa 0448     		ldr	r0, .L34+4
 993 00ac FFF7FEFF 		bl	HAL_GPIO_Init
 339:Core/Src/main.c **** 
 340:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 341:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 342:Core/Src/main.c **** }
 994              		.loc 1 342 1
 995 00b0 00BF     		nop
 996 00b2 2837     		adds	r7, r7, #40
 997              	.LCFI21:
 998              		.cfi_def_cfa_offset 8
 999 00b4 BD46     		mov	sp, r7
 1000              	.LCFI22:
 1001              		.cfi_def_cfa_register 13
 1002              		@ sp needed
 1003 00b6 80BD     		pop	{r7, pc}
 1004              	.L35:
 1005              		.align	2
 1006              	.L34:
 1007 00b8 00380240 		.word	1073887232
 1008 00bc 00080240 		.word	1073874944
 1009              		.cfi_endproc
 1010              	.LFE224:
 1012              		.section	.text.HAL_TIM_PeriodElapsedCallback,"ax",%progbits
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 25


 1013              		.align	1
 1014              		.global	HAL_TIM_PeriodElapsedCallback
 1015              		.syntax unified
 1016              		.thumb
 1017              		.thumb_func
 1019              	HAL_TIM_PeriodElapsedCallback:
 1020              	.LFB225:
 343:Core/Src/main.c **** 
 344:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 345:Core/Src/main.c **** void HAL_TIM_PeriodElapsedCallback (TIM_HandleTypeDef * htim){
 1021              		.loc 1 345 62
 1022              		.cfi_startproc
 1023              		@ args = 0, pretend = 0, frame = 8
 1024              		@ frame_needed = 1, uses_anonymous_args = 0
 1025              		@ link register save eliminated.
 1026 0000 80B4     		push	{r7}
 1027              	.LCFI23:
 1028              		.cfi_def_cfa_offset 4
 1029              		.cfi_offset 7, -4
 1030 0002 83B0     		sub	sp, sp, #12
 1031              	.LCFI24:
 1032              		.cfi_def_cfa_offset 16
 1033 0004 00AF     		add	r7, sp, #0
 1034              	.LCFI25:
 1035              		.cfi_def_cfa_register 7
 1036 0006 7860     		str	r0, [r7, #4]
 346:Core/Src/main.c **** }
 1037              		.loc 1 346 1
 1038 0008 00BF     		nop
 1039 000a 0C37     		adds	r7, r7, #12
 1040              	.LCFI26:
 1041              		.cfi_def_cfa_offset 4
 1042 000c BD46     		mov	sp, r7
 1043              	.LCFI27:
 1044              		.cfi_def_cfa_register 13
 1045              		@ sp needed
 1046 000e 5DF8047B 		ldr	r7, [sp], #4
 1047              	.LCFI28:
 1048              		.cfi_restore 7
 1049              		.cfi_def_cfa_offset 0
 1050 0012 7047     		bx	lr
 1051              		.cfi_endproc
 1052              	.LFE225:
 1054              		.section	.text.Error_Handler,"ax",%progbits
 1055              		.align	1
 1056              		.global	Error_Handler
 1057              		.syntax unified
 1058              		.thumb
 1059              		.thumb_func
 1061              	Error_Handler:
 1062              	.LFB226:
 347:Core/Src/main.c **** 
 348:Core/Src/main.c **** /* USER CODE END 4 */
 349:Core/Src/main.c **** 
 350:Core/Src/main.c **** /**
 351:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 352:Core/Src/main.c ****   * @retval None
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 26


 353:Core/Src/main.c ****   */
 354:Core/Src/main.c **** void Error_Handler(void)
 355:Core/Src/main.c **** {
 1063              		.loc 1 355 1
 1064              		.cfi_startproc
 1065              		@ args = 0, pretend = 0, frame = 0
 1066              		@ frame_needed = 1, uses_anonymous_args = 0
 1067              		@ link register save eliminated.
 1068 0000 80B4     		push	{r7}
 1069              	.LCFI29:
 1070              		.cfi_def_cfa_offset 4
 1071              		.cfi_offset 7, -4
 1072 0002 00AF     		add	r7, sp, #0
 1073              	.LCFI30:
 1074              		.cfi_def_cfa_register 7
 1075              	.LBB11:
 1076              	.LBB12:
 1077              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 27


  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 28


  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1078              		.loc 2 142 3
 1079              		.syntax unified
 1080              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1081 0004 72B6     		cpsid i
 1082              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 1083              		.loc 2 143 1
 1084              		.thumb
 1085              		.syntax unified
 1086 0006 00BF     		nop
 1087              	.L38:
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 29


 1088              	.LBE12:
 1089              	.LBE11:
 356:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 357:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 358:Core/Src/main.c ****   __disable_irq();
 359:Core/Src/main.c ****   while (1)
 1090              		.loc 1 359 9 discriminator 1
 1091 0008 FEE7     		b	.L38
 1092              		.cfi_endproc
 1093              	.LFE226:
 1095              		.text
 1096              	.Letext0:
 1097              		.file 3 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-
 1098              		.file 4 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-
 1099              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 1100              		.file 6 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f4xx.h"
 1101              		.file 7 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\lib\
 1102              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 1103              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 1104              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 1105              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 1106              		.file 12 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_dma.h"
 1107              		.file 13 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_adc.h"
 1108              		.file 14 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim.h"
 1109              		.file 15 "Core/Inc/main.h"
 1110              		.file 16 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_tim_ex.h"
 1111              		.file 17 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 1112              		.file 18 "USB_DEVICE/App/usbd_cdc_if.h"
 1113              		.file 19 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm
 1114              		.file 20 "c:\\arm-gcc\\tools\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm
 1115              		.file 21 "USB_DEVICE/App/usb_device.h"
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 30


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:24     .bss.hadc1:00000000 hadc1
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:21     .bss.hadc1:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:31     .bss.htim3:00000000 htim3
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:28     .bss.htim3:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:38     .bss.gUSBRxBuffer:00000000 gUSBRxBuffer
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:35     .bss.gUSBRxBuffer:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:45     .bss.writeBuffer:00000000 writeBuffer
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:42     .bss.writeBuffer:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:52     .bss.readBuffer:00000000 readBuffer
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:49     .bss.readBuffer:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:59     .bss.read:00000000 read
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:56     .bss.read:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:66     .bss.bitNumber:00000000 bitNumber
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:63     .bss.bitNumber:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:73     .bss.cent:00000000 cent
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:70     .bss.cent:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:80     .bss.test:00000000 test
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:77     .bss.test:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:86     .bss.answer:00000000 answer
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:87     .bss.answer:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:89     .rodata:00000000 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:107    .text.main:00000000 $t
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:113    .text.main:00000000 main
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:444    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:887    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:591    .text.MX_ADC1_Init:00000000 MX_ADC1_Init
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:719    .text.MX_TIM3_Init:00000000 MX_TIM3_Init
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:418    .text.main:000001ec $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:438    .text.SystemClock_Config:00000000 $t
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:1061   .text.Error_Handler:00000000 Error_Handler
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:580    .text.SystemClock_Config:000000c8 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:586    .text.MX_ADC1_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:707    .text.MX_ADC1_Init:00000098 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:714    .text.MX_TIM3_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:876    .text.MX_TIM3_Init:000000e8 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:882    .text.MX_GPIO_Init:00000000 $t
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:1007   .text.MX_GPIO_Init:000000b8 $d
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:1013   .text.HAL_TIM_PeriodElapsedCallback:00000000 $t
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:1019   .text.HAL_TIM_PeriodElapsedCallback:00000000 HAL_TIM_PeriodElapsedCallback
C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s:1055   .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
__aeabi_ui2d
__aeabi_dadd
__aeabi_d2uiz
__aeabi_dsub
HAL_Init
MX_USB_DEVICE_Init
HAL_TIM_PWM_Start
HAL_ADC_Start
sprintf
strlen
CDC_Transmit_FS
HAL_ADC_GetValue
HAL_Delay
ARM GAS  C:\Users\eduap\AppData\Local\Temp\cc4nU5os.s 			page 31


memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_ADC_Init
HAL_ADC_ConfigChannel
HAL_TIM_Base_Init
HAL_TIM_ConfigClockSource
HAL_TIM_PWM_Init
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIM_MspPostInit
HAL_GPIO_WritePin
HAL_GPIO_Init
